<!DOCTYPE html>
<!-- saved from url=(0060)https://api-ordering-docs.urbanpiper.com/#managing-catalogue -->
<html class="gr__api-ordering-docs_urbanpiper_com"><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
    
    <meta content="IE=edge,chrome=1" http-equiv="X-UA-Compatible">
    <meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1">
    <title>UrbanPiper API Reference</title>

    <style>
      .highlight table td { padding: 5px; }
.highlight table pre { margin: 0; }
.highlight .gh {
  color: #999999;
}
.highlight .sr {
  color: #f6aa11;
}
.highlight .go {
  color: #888888;
}
.highlight .gp {
  color: #555555;
}
.highlight .gs {
}
.highlight .gu {
  color: #aaaaaa;
}
.highlight .nb {
  color: #f6aa11;
}
.highlight .cm {
  color: #75715e;
}
.highlight .cp {
  color: #75715e;
}
.highlight .c1 {
  color: #75715e;
}
.highlight .cs {
  color: #75715e;
}
.highlight .c, .highlight .cd {
  color: #75715e;
}
.highlight .err {
  color: #960050;
}
.highlight .gr {
  color: #960050;
}
.highlight .gt {
  color: #960050;
}
.highlight .gd {
  color: #49483e;
}
.highlight .gi {
  color: #49483e;
}
.highlight .ge {
  color: #49483e;
}
.highlight .kc {
  color: #66d9ef;
}
.highlight .kd {
  color: #66d9ef;
}
.highlight .kr {
  color: #66d9ef;
}
.highlight .no {
  color: #66d9ef;
}
.highlight .kt {
  color: #66d9ef;
}
.highlight .mf {
  color: #ae81ff;
}
.highlight .mh {
  color: #ae81ff;
}
.highlight .il {
  color: #ae81ff;
}
.highlight .mi {
  color: #ae81ff;
}
.highlight .mo {
  color: #ae81ff;
}
.highlight .m, .highlight .mb, .highlight .mx {
  color: #ae81ff;
}
.highlight .sc {
  color: #ae81ff;
}
.highlight .se {
  color: #ae81ff;
}
.highlight .ss {
  color: #ae81ff;
}
.highlight .sd {
  color: #e6db74;
}
.highlight .s2 {
  color: #e6db74;
}
.highlight .sb {
  color: #e6db74;
}
.highlight .sh {
  color: #e6db74;
}
.highlight .si {
  color: #e6db74;
}
.highlight .sx {
  color: #e6db74;
}
.highlight .s1 {
  color: #e6db74;
}
.highlight .s {
  color: #e6db74;
}
.highlight .na {
  color: #a6e22e;
}
.highlight .nc {
  color: #a6e22e;
}
.highlight .nd {
  color: #a6e22e;
}
.highlight .ne {
  color: #a6e22e;
}
.highlight .nf {
  color: #a6e22e;
}
.highlight .vc {
  color: #ffffff;
}
.highlight .nn {
  color: #ffffff;
}
.highlight .nl {
  color: #ffffff;
}
.highlight .ni {
  color: #ffffff;
}
.highlight .bp {
  color: #ffffff;
}
.highlight .vg {
  color: #ffffff;
}
.highlight .vi {
  color: #ffffff;
}
.highlight .nv {
  color: #ffffff;
}
.highlight .w {
  color: #ffffff;
}
.highlight {
  color: #ffffff;
}
.highlight .n, .highlight .py, .highlight .nx {
  color: #ffffff;
}
.highlight .ow {
  color: #f92672;
}
.highlight .nt {
  color: #f92672;
}
.highlight .k, .highlight .kv {
  color: #f92672;
}
.highlight .kn {
  color: #f92672;
}
.highlight .kp {
  color: #f92672;
}
.highlight .o {
  color: #f92672;
}
    </style>
    <link href="./UrbanPiper API Reference_files/screen.css" rel="stylesheet" media="screen">
    <link href="./UrbanPiper API Reference_files/print.css" rel="stylesheet" media="print">
      <script src="./UrbanPiper API Reference_files/all.js"></script>
  <style type="text/css">
@font-face {
  font-weight: 400;
  font-style:  normal;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-Regular.woff2') format('woff2');
}
@font-face {
  font-weight: 400;
  font-style:  italic;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-Italic.woff2') format('woff2');
}

@font-face {
  font-weight: 500;
  font-style:  normal;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-Medium.woff2') format('woff2');
}
@font-face {
  font-weight: 500;
  font-style:  italic;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-MediumItalic.woff2') format('woff2');
}

@font-face {
  font-weight: 700;
  font-style:  normal;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-Bold.woff2') format('woff2');
}
@font-face {
  font-weight: 700;
  font-style:  italic;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-BoldItalic.woff2') format('woff2');
}

@font-face {
  font-weight: 900;
  font-style:  normal;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-Black.woff2') format('woff2');
}
@font-face {
  font-weight: 900;
  font-style:  italic;
  font-family: 'Inter-Loom';

  src: url('https://cdn.loom.com/assets/fonts/inter/Inter-UI-BlackItalic.woff2') format('woff2');
}</style></head>

  <body class="index" data-languages="[&quot;shell&quot;,&quot;python&quot;,&quot;javascript&quot;,&quot;java&quot;,&quot;php&quot;]" data-gr-c-s-loaded="true">
    <a href="https://api-ordering-docs.urbanpiper.com/#" id="nav-button">
      <span>
        NAV
        <img src="./UrbanPiper API Reference_files/navbar.png" alt="Navbar">
      </span>
    </a>
    <div class="tocify-wrapper">
      <img src="./UrbanPiper API Reference_files/logo.png" alt="Logo">
        <div class="lang-selector">
              <a href="https://api-ordering-docs.urbanpiper.com/#" data-language-name="shell" class="active">shell</a>
              <a href="https://api-ordering-docs.urbanpiper.com/#" data-language-name="python">python</a>
              <a href="https://api-ordering-docs.urbanpiper.com/#" data-language-name="javascript">javascript</a>
              <a href="https://api-ordering-docs.urbanpiper.com/#" data-language-name="java">java</a>
              <a href="https://api-ordering-docs.urbanpiper.com/#" data-language-name="php">php</a>
        </div>
        <div class="search">
          <input type="text" class="search" id="input-search" placeholder="Search">
        </div>
        <ul class="search-results"></ul>
      <div id="toc" class="tocify">
      <ul id="tocify-header0" class="tocify-header"><li class="tocify-item" data-unique="introduction"><a>Introduction</a></li></ul><ul id="tocify-header1" class="tocify-header"><li class="tocify-item" data-unique="authentication"><a>Authentication</a></li><ul class="tocify-subheader" data-tag="2" style=""><li class="tocify-item" data-unique="token-authentication"><a>Token authentication</a></li></ul></ul><ul id="tocify-header2" class="tocify-header"><li class="tocify-item" data-unique="configuration"><a>Configuration</a></li><ul class="tocify-subheader" data-tag="2" style="display: block;"><li class="tocify-item" data-unique="adding-updating-stores"><a>Adding/Updating stores</a></li><li class="tocify-item" data-unique="store-actions-api"><a>Store Actions API</a></li><li class="tocify-item tocify-focus" data-unique="managing-catalogue"><a>Managing catalogue</a></li><li class="tocify-item" data-unique="item-actions-api"><a>Item Actions API</a></li><li class="tocify-item" data-unique="webhooks-api"><a>Webhooks API</a></li></ul></ul><ul id="tocify-header3" class="tocify-header"><li class="tocify-item" data-unique="ordering"><a>Ordering</a></li><ul class="tocify-subheader" data-tag="2" style=""><li class="tocify-item" data-unique="order-status-update"><a>Order Status Update</a></li></ul></ul><ul id="tocify-header4" class="tocify-header"><li class="tocify-item" data-unique="webhooks"><a>Webhooks</a></li><ul class="tocify-subheader" data-tag="2" style=""><li class="tocify-item" data-unique="store-configuration-callback"><a>Store Configuration callback</a></li><li class="tocify-item" data-unique="catalogue-configuration-callback"><a>Catalogue configuration callback</a></li><li class="tocify-item" data-unique="order-relay"><a>Order Relay</a></li><li class="tocify-item" data-unique="order-status-change"><a>Order Status Change</a></li><li class="tocify-item" data-unique="rider-status-change"><a>Rider Status Change</a></li><li class="tocify-item" data-unique="store-actions-callback"><a>Store Actions Callback</a></li></ul></ul><ul id="tocify-header5" class="tocify-header"><li class="tocify-item" data-unique="developer-changelog"><a>Developer changelog</a></li><ul class="tocify-subheader" data-tag="2" style=""><li class="tocify-item" data-unique="semantic-versioning-approach"><a>Semantic Versioning Approach</a></li></ul></ul><ul id="tocify-header6" class="tocify-header"><li class="tocify-item" data-unique="errors"><a>Errors</a></li></ul></div>
        <ul class="toc-footer">
            <li><a href="mailto:support@urbanpiper.com">Sign Up for a Developer Key</a></li>
        </ul>
    </div>
    <div class="page-wrapper">
      <div class="dark-box"></div>
      <div class="content">
        <div name="introduction" data-unique="introduction"></div><h1 id="introduction">Introduction</h1>

<p></p><aside class="notice">Doc Version: <code>v.5.3.0</code></aside><br><p></p>

<p>This document lists out the API endpoints that can be consumed by a merchant’s backend system like a PoS or ERP system.Language bindings in cURL, Python, Javascript, Java and PHP have been provided! You can view code examples in the dark section to the right and switch the programming language by clicking on the language tabs at the top of the section.</p>

<p>For suggesting any edits, feel free to reach out to us on our <a href="mailto:support@urbanpiper.com">support channel</a>.  </p>

<p>While referencing these docs, please keep the following points in mind:  </p>

<ol>
<li>Please drop in a mail to our <a href="mailto:support@urbanpiper.com">support channel</a> or reach out to your tech point-of-contact to flag any issue(s).<br></li>
<li>We try our best to keep this doc in sync with our development pace, but at times a gap creeps in. Should you believe something is missing in the doc, feel free to let us know.<br></li>
<li>Request parameters that are required will be followed by a <span class="param-required">required</span> tag.<br></li>
<li>During development phase, you should be ideally using our <em>staging</em> environment: <a href="https://api-ordering-docs.urbanpiper.com/staging.urbanpiper.com">staging.urbanpiper.com</a></li>
<li>All requests should be made using the <strong>https</strong> scheme.</li>
</ol>

          <div name="authentication" data-unique="authentication"></div><h1 id="authentication">Authentication</h1>

<div name="token-authentication" data-unique="token-authentication"></div><h2 id="token-authentication">Token authentication</h2>

<p>For accessing the endpoints, a combination of <code class="prettyprint">username</code> and <code class="prettyprint">API key</code> is required. You can requesting for them <a href="mailto:support@urbanpiper.com?subject=Need%20API%20access">here</a>.</p>

<p>The API credentials should be passed in using the <code class="prettyprint">Authorization</code> header value like so:</p>

<p><code class="prettyprint">Authorization: apikey &lt;USERNAME&gt;:&lt;API KEY&gt;</code></p>

<aside class="notice">
You must replace <code>USERNAME</code> and <code>API KEY</code> with the ones issued to you.
</aside>

          <div name="configuration" data-unique="configuration"></div><h1 id="configuration">Configuration</h1>

<p>These endpoints should be used to configure the UrbanPiper platform with all the necessary data required to setup the merchant’s online Order Management System (OMS).
As of now, the platform allows the following configurations to be managed through APIs:  </p>

<ul>
<li>Stores<br></li>
<li>Categories<br></li>
<li>Items/Products<br></li>
<li>Item Option Groups<br></li>
<li>Item Options</li>
</ul>

<div name="adding-updating-stores" data-unique="adding-updating-stores"></div><h2 id="adding-updating-stores">Adding/Updating stores</h2>
<pre class="highlight shell tab-shell" style="display: block;"><code>curl -v -X POST <span class="se">\</span>
  https://staging.urbanpiper.com/external/api/v1/stores/ <span class="se">\</span>
  -H <span class="s1">'Authorization: apikey testusername:testapikeys'</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -d <span class="s1">'{
    "stores": [{
        "city":"Bangalore",
        "name":"Koramanagala",
        "min_pickup_time":900,
        "min_delivery_time":1800,
        "contact_phone":"98234566222",
        "notification_phones":[
            "+919134345345",
            "98234566778"
        ],
        "ref_id":"5916020652145",
        "min_order_value":200,
        "hide_from_ui":false,
        "address":"2nd Cross 5th Main",
        "notification_emails":[
            "b1@mail.com",
            "b2@mail.com"
        ],
        "zip_codes":[
            "560033",
            "560022"
        ],
        "geo_longitude":22.234324,
        "active":true,
        "geo_latitude":19.12312,
        "ordering_enabled":true,
        "translations": [{
            "language": "fr",
            "name": "..."
        }],
        "excluded_platforms": ["zomato", "swiggy"],
        "timings": [
            {
                "day": "monday",
                "slots": [{
                    "start_time": "10:00:00",
                    "end_time": "22:30:00"
                }]
            },
            {
                "day": "tuesday",
                "slots": [{
                    "start_time": "10:00:00",
                    "end_time": "22:30:00"
                }]
            }
        ]
    },
    {
        "city":"delhi",
        "name":"Connaught Place",
        "min_pickup_time":900,
        "min_delivery_time":1800,
        "contact_phone":"+9172342222332",
        "notification_phones":[
            "7234222233",
            "+917234222555"
        ],
        "ref_id":"6906011059645",
        "min_order_value":200,
        "hide_from_ui":false,
        "address":"Sector 21, D - block",
        "notification_emails":[
            "d1@mail.com",
            "d2@mail.com"
        ],
        "zip_codes":[
            "110021",
            "2312323"
        ],
        "geo_longitude":22.234324,
        "active":false,
        "geo_latitude":19.12312,
        "ordering_enabled":true,
        "translations": [{
            "language": "fr",
            "name": "..."
        }]
    }]
}'</span>
</code></pre><pre class="highlight python tab-python" style="display: none;"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">"https://staging.urbanpiper.com/external/api/v1/stores/"</span>

<span class="n">payload</span> <span class="o">=</span> <span class="s">"{</span><span class="se">\"</span><span class="s">stores</span><span class="se">\"</span><span class="s">:[{</span><span class="se">\"</span><span class="s">city</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Bangalore</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">name</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Koramanagala</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">min_pickup_time</span><span class="se">\"</span><span class="s">:900,</span><span class="se">\"</span><span class="s">min_delivery_time</span><span class="se">\"</span><span class="s">:1800,</span><span class="se">\"</span><span class="s">contact_phone</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">98234566222</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">notification_phones</span><span class="se">\"</span><span class="s">:[</span><span class="se">\"</span><span class="s">+919134345345</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">98234566778</span><span class="se">\"</span><span class="s">],</span><span class="se">\"</span><span class="s">ref_id</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">5916020652145</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">min_order_value</span><span class="se">\"</span><span class="s">:200,</span><span class="se">\"</span><span class="s">hide_from_ui</span><span class="se">\"</span><span class="s">:false,</span><span class="se">\"</span><span class="s">address</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">2nd Cross 5th Main</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">notification_emails</span><span class="se">\"</span><span class="s">:[</span><span class="se">\"</span><span class="s">b1@mail.com</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">b2@mail.com</span><span class="se">\"</span><span class="s">],</span><span class="se">\"</span><span class="s">zip_codes</span><span class="se">\"</span><span class="s">:[</span><span class="se">\"</span><span class="s">560033</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">560022</span><span class="se">\"</span><span class="s">],</span><span class="se">\"</span><span class="s">geo_longitude</span><span class="se">\"</span><span class="s">:22.234324,</span><span class="se">\"</span><span class="s">active</span><span class="se">\"</span><span class="s">:true,</span><span class="se">\"</span><span class="s">geo_latitude</span><span class="se">\"</span><span class="s">:19.12312,</span><span class="se">\"</span><span class="s">ordering_enabled</span><span class="se">\"</span><span class="s">:true},{</span><span class="se">\"</span><span class="s">city</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">delhi</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">name</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Connaught Place</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">min_pickup_time</span><span class="se">\"</span><span class="s">:900,</span><span class="se">\"</span><span class="s">min_delivery_time</span><span class="se">\"</span><span class="s">:1800,</span><span class="se">\"</span><span class="s">contact_phone</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">+9172342222332</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">notification_phones</span><span class="se">\"</span><span class="s">:[</span><span class="se">\"</span><span class="s">7234222233</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">+917234222555</span><span class="se">\"</span><span class="s">],</span><span class="se">\"</span><span class="s">ref_id</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">6906011059645</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">min_order_value</span><span class="se">\"</span><span class="s">:200,</span><span class="se">\"</span><span class="s">hide_from_ui</span><span class="se">\"</span><span class="s">:false,</span><span class="se">\"</span><span class="s">address</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Sector 21, D - block</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">notification_emails</span><span class="se">\"</span><span class="s">:[</span><span class="se">\"</span><span class="s">d1@mail.com</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">d2@mail.com</span><span class="se">\"</span><span class="s">],</span><span class="se">\"</span><span class="s">zip_codes</span><span class="se">\"</span><span class="s">:[</span><span class="se">\"</span><span class="s">110021</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">2312323</span><span class="se">\"</span><span class="s">],</span><span class="se">\"</span><span class="s">geo_longitude</span><span class="se">\"</span><span class="s">:22.234324,</span><span class="se">\"</span><span class="s">active</span><span class="se">\"</span><span class="s">:false,</span><span class="se">\"</span><span class="s">geo_latitude</span><span class="se">\"</span><span class="s">:19.12312,</span><span class="se">\"</span><span class="s">ordering_enabled</span><span class="se">\"</span><span class="s">:true, </span><span class="se">\"</span><span class="s">translations</span><span class="se">\"</span><span class="s">:[{</span><span class="se">\"</span><span class="s">language</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">fr</span><span class="se">\"</span><span class="s">, </span><span class="se">\"</span><span class="s">name</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">c</span><span class="se">\'</span><span class="s">est un magasin</span><span class="se">\"</span><span class="s">}]}]}"</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">"apikey testusername:testapikeys"</span><span class="p">,</span>
    <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">"application/json"</span>
    <span class="p">}</span>

<span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="s">"POST"</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">payload</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
</code></pre><pre class="highlight javascript tab-javascript" style="display: none;"><code><span class="kd">var</span> <span class="nx">settings</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s2">"async"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="s2">"crossDomain"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="s2">"url"</span><span class="p">:</span> <span class="s2">"https://staging.urbanpiper.com/external/api/v1/stores/"</span><span class="p">,</span>
  <span class="s2">"method"</span><span class="p">:</span> <span class="s2">"POST"</span><span class="p">,</span>
  <span class="s2">"headers"</span><span class="p">:</span> <span class="p">{</span>
    <span class="s2">"Authorization"</span><span class="p">:</span> <span class="s2">"apikey testusername:testapikeys"</span><span class="p">,</span>
    <span class="s2">"Content-Type"</span><span class="p">:</span> <span class="s2">"application/json"</span>
  <span class="p">},</span>
  <span class="s2">"processData"</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="s2">"data"</span><span class="p">:</span> <span class="s2">"{\"stores\":[{\"city\":\"Bangalore\",\"name\":\"Koramanagala\",\"min_pickup_time\":900,\"min_delivery_time\":1800,\"contact_phone\":\"98234566222\",\"notification_phones\":[\"+919134345345\",\"98234566778\"],\"ref_id\":\"5916020652145\",\"min_order_value\":200,\"hide_from_ui\":false,\"address\":\"2nd Cross 5th Main\",\"notification_emails\":[\"b1@mail.com\",\"b2@mail.com\"],\"zip_codes\":[\"560033\",\"560022\"],\"geo_longitude\":22.234324,\"active\":true,\"geo_latitude\":19.12312,\"ordering_enabled\":true},{\"city\":\"delhi\",\"name\":\"Connaught Place\",\"min_pickup_time\":900,\"min_delivery_time\":1800,\"contact_phone\":\"+9172342222332\",\"notification_phones\":[\"7234222233\",\"+917234222555\"],\"ref_id\":\"6906011059645\",\"min_order_value\":200,\"hide_from_ui\":false,\"address\":\"Sector 21, D - block\",\"notification_emails\":[\"d1@mail.com\",\"d2@mail.com\"],\"zip_codes\":[\"110021\",\"2312323\"],\"geo_longitude\":22.234324,\"active\":false,\"geo_latitude\":19.12312,\"ordering_enabled\":true},\"translations\":[{\"language\":\"fr\", \"name\":\"c\'est un magasin\"}]]}"</span>
<span class="p">}</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">(</span><span class="nx">settings</span><span class="p">).</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
<span class="p">});</span>
</code></pre><pre class="highlight java tab-java" style="display: none;"><code><span class="n">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OkHttpClient</span><span class="o">();</span>

<span class="n">MediaType</span> <span class="n">mediaType</span> <span class="o">=</span> <span class="n">MediaType</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"application/json"</span><span class="o">);</span>
<span class="n">RequestBody</span> <span class="n">body</span> <span class="o">=</span> <span class="n">RequestBody</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">mediaType</span><span class="o">,</span> <span class="s">"{\"stores\":[{\"city\":\"Bangalore\",\"name\":\"Koramanagala\",\"min_pickup_time\":900,\"min_delivery_time\":1800,\"contact_phone\":\"98234566222\",\"notification_phones\":[\"+919134345345\",\"98234566778\"],\"ref_id\":\"5916020652145\",\"min_order_value\":200,\"hide_from_ui\":false,\"address\":\"2nd Cross 5th Main\",\"notification_emails\":[\"b1@mail.com\",\"b2@mail.com\"],\"zip_codes\":[\"560033\",\"560022\"],\"geo_longitude\":22.234324,\"active\":true,\"geo_latitude\":19.12312,\"ordering_enabled\":true},{\"city\":\"delhi\",\"name\":\"Connaught Place\",\"min_pickup_time\":900,\"min_delivery_time\":1800,\"contact_phone\":\"+9172342222332\",\"notification_phones\":[\"7234222233\",\"+917234222555\"],\"ref_id\":\"6906011059645\",\"min_order_value\":200,\"hide_from_ui\":false,\"address\":\"Sector 21, D - block\",\"notification_emails\":[\"d1@mail.com\",\"d2@mail.com\"],\"zip_codes\":[\"110021\",\"2312323\"],\"geo_longitude\":22.234324,\"active\":false,\"geo_latitude\":19.12312,\"ordering_enabled\":true},\"translations\":[{\"language\":\"fr\", \"name\":\"c\'est un magasin\"}]]}"</span><span class="o">);</span>
<span class="n">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
  <span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="s">"https://staging.urbanpiper.com/external/api/v1/stores/"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="n">body</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Authorization"</span><span class="o">,</span> <span class="s">"apikey testusername:testapikeys"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">build</span><span class="o">();</span>

<span class="n">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</code></pre><pre class="highlight php tab-php" style="display: none;"><code><span class="cp">&lt;?php</span>

<span class="nv">$request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">HttpRequest</span><span class="p">();</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setUrl</span><span class="p">(</span><span class="s1">'https://staging.urbanpiper.com/external/api/v1/stores/'</span><span class="p">);</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setMethod</span><span class="p">(</span><span class="nx">HTTP_METH_POST</span><span class="p">);</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setHeaders</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
  <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'application/json'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'apikey testusername:testapikeys'</span>
<span class="p">));</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setBody</span><span class="p">(</span><span class="s1">'{"stores":[{"city":"Bangalore","name":"Koramanagala","min_pickup_time":900,"min_delivery_time":1800,"contact_phone":"98234566222","notification_phones":["+919134345345","98234566778"],"ref_id":"5916020652145","min_order_value":200,"hide_from_ui":false,"address":"2nd Cross 5th Main","notification_emails":["b1@mail.com","b2@mail.com"],"zip_codes":["560033","560022"],"geo_longitude":22.234324,"active":true,"geo_latitude":19.12312,"ordering_enabled":true},{"city":"delhi","name":"Connaught Place","min_pickup_time":900,"min_delivery_time":1800,"contact_phone":"+9172342222332","notification_phones":["7234222233","+917234222555"],"ref_id":"6906011059645","min_order_value":200,"hide_from_ui":false,"address":"Sector 21, D - block","notification_emails":["d1@mail.com","d2@mail.com"],"zip_codes":["110021","2312323"],"geo_longitude":22.234324,"active":false,"geo_latitude":19.12312,"ordering_enabled":true},"translations":[{"language":"fr", "name":"c\'est un magasin"}]]}'</span><span class="p">);</span>

<span class="k">try</span> <span class="p">{</span>
  <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>

  <span class="k">echo</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">();</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">HttpException</span> <span class="nv">$ex</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$ex</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"success"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Your request has been queued. Once processed, a callback will be issued to the configured webhook(s)."</span><span class="p">,</span><span class="w">
    </span><span class="s2">"reference"</span><span class="p">:</span><span class="w"> </span><span class="s2">"6e6f2f711e52430db737c588c20a4491"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This endpoint should be used to create and update the stores for a merchant. It accepts a list of store related information and queues the work for asynchronous processing. The number of stores that can be handled in one request is limited to <em>5000</em>. Once the platform has processed all the information, a callback request is made using webhooks. You can get more information about that in the Webhooks section for the <a href="https://api-ordering-docs.urbanpiper.com/#store-configuration-callback">store configuration webhook</a>.</p>

<aside class="warning">
  <header>constraints &amp; expectations</header>

  <p>
    A <em>throttle limit</em> is applicable on this endpoint limiting the maximum number of requests/min to <b>20</b>. If you breach this threshold, the platform will respond with a <code>429</code> error response code and you will not be able to make new requests for a duration of <strong>1 min</strong>.
  </p>
  <p>
    <i>Payload size:</i> for a single request, you cannot create/update more than <strong>5000</strong> stores.
  </p>
  <p>
    This endpoint processes its tasks <i>asynchronously</i> by utilising a queueing mechanism. The time it takes to respond to a request you place depends upon: the <i>current backlog</i> on the queue, and, the <i>payload size</i>.  
    While we can’t provide any guarantees on the queue, but our infrastructure is equipped to ensure with 99% probability that you will receive a response within <b>1 minute</b>.</p>
</aside>

<p><strong>NOTE:</strong> Since the same endpoint can be used for both adding new stores and updating existing stores, the <em>required</em> set of request parameters differ based on the context of the request. The constraints will be explained for the parameters in their value descriptions.</p>

<h4 id="request-url">Request URL</h4>

<p><span class="request-type get">POST</span><code class="prettyprint">/external/api/v1/stores/</code></p>

<h4 id="request-header">Request header</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">Authorization</code></td>
<td>API key based auth header. Refer <a href="https://api-ordering-docs.urbanpiper.com/#authentication">authentication</a>.</td>
</tr>
</tbody></table>

<h4 id="request-parameters">Request Parameters</h4>

<p>A single root-level attribute — <code class="prettyprint">stores</code> — is expected. The value for this attribute should be an array of objects, where each object represents a store.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">ref_id</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The unique ID of the store in the PoS/ERP system.</td>
</tr>
<tr>
<td><code class="prettyprint">name</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The name of the store. <br>Not required for updates.</td>
</tr>
<tr>
<td><code class="prettyprint">address</code> <span class="type">string</span></td>
<td>The store’s street address.</td>
</tr>
<tr>
<td><code class="prettyprint">city</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The city in which the store is located.</td>
</tr>
<tr>
<td><code class="prettyprint">geo_latitude</code> <span class="type">double</span></td>
<td>Latitude of the store’s geo location.</td>
</tr>
<tr>
<td><code class="prettyprint">geo_longitude</code> <span class="type">double</span></td>
<td>Longitude of the store’s geo location.</td>
</tr>
<tr>
<td><code class="prettyprint">contact_phone</code> <span class="type">string</span></td>
<td>A phone number to dial-in to the store.</td>
</tr>
<tr>
<td><code class="prettyprint">notification_emails</code> <span class="type">array[string]</span></td>
<td>List of email IDs that will be notified by the platform for store related alerts.</td>
</tr>
<tr>
<td><code class="prettyprint">notification_phones</code> <span class="type">array[string]</span></td>
<td>List of phone numbers that will be notified by the platform for store related alerts.</td>
</tr>
<tr>
<td><code class="prettyprint">min_order_value</code> <span class="type">float</span></td>
<td>Mininum amount for an online order to be accepted at this store.</td>
</tr>
<tr>
<td><code class="prettyprint">min_delivery_time</code> <span class="type">integer</span></td>
<td>Minimum time (in seconds) required to deliver an order.</td>
</tr>
<tr>
<td><code class="prettyprint">min_pickup_time</code> <span class="type">integer</span></td>
<td>Minimum time (in seconds) required to prepare an order for pickup.</td>
</tr>
<tr>
<td><code class="prettyprint">ordering_enabled</code> <span class="type">boolean</span></td>
<td>Indicates whether the store is enabled for online ordering.</td>
</tr>
<tr>
<td><code class="prettyprint">active</code> <span class="type">boolean</span></td>
<td>Indicates whether the store is active.</td>
</tr>
<tr>
<td><code class="prettyprint">hide_from_ui</code> <span class="type">boolean</span></td>
<td>To prevent the store’s name to appear in websites and apps.</td>
</tr>
<tr>
<td><code class="prettyprint">zip_codes</code> <span class="type">string</span></td>
<td>A set of Zip codes to which the store can deliver. <br><strong>NOTE:</strong> if this is set for even one store, the platform will only consider Zip codes on all stores for checking deliverability. The logic of delivery based on distance or an area polygon will <em>not</em> be considered. This applies for the merchant’s own website and apps.</td>
</tr>
<tr>
<td><code class="prettyprint">translations</code> <span class="type">array[objects]</span></td>
<td>An array of translation objects - each object specifies a translated value for the <code class="prettyprint">name</code> attribute.</td>
</tr>
<tr>
<td><code class="prettyprint">language</code> <span class="type">string</span></td>
<td>The 2-letter (<a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO-639-1</a> compliant) language code. At present, the following languages are supported:<br>– <code class="prettyprint">hi</code>: Hindi<br>– <code class="prettyprint">ar</code>: Arabic<br>– <code class="prettyprint">ja</code>: Japanese<br>– <code class="prettyprint">pt</code>: Portugues<br>– <code class="prettyprint">fr</code>: French<br>– <code class="prettyprint">es</code>: Spanish.</td>
</tr>
<tr>
<td><code class="prettyprint">excluded_platforms</code> <span class="type">array[string]</span></td>
<td>list of platforms from which the store to be excluded from. By default all stores are part of all platforms associated with the business. If there is a special case, then the store should be excluded explicitly.</td>
</tr>
<tr>
<td><code class="prettyprint">timings</code> <span class="type">array[object]</span></td>
<td>timings for the store. we support slots based checkout timings</td>
</tr>
<tr>
<td><code class="prettyprint">day</code> <span class="type">string</span></td>
<td>weekday for which the timings are defined. values include [sunday .. monday]</td>
</tr>
<tr>
<td><code class="prettyprint">slots</code> <span class="type">array[object]</span></td>
<td>slots defined for the given day</td>
</tr>
<tr>
<td><code class="prettyprint">start_time</code> <span class="type">string</span></td>
<td>start time of the slot format: HH:MM:SS</td>
</tr>
<tr>
<td><code class="prettyprint">end_time</code> <span class="type">string</span></td>
<td>end time of the slot format: HH:MM:SS</td>
</tr>
</tbody></table>

<h4 id="response-parameters">Response Parameters</h4>

<p>Since the processing for this request is done asynchronously, the response will typically be sent back quickly, irrespective of the number of stores passed in.
The detailed response providing granular information about the processing of the payload is sent back through a webhook callback mechanism. Should you be interested in the final status of the request’s processing, remember to configure the webhook. More details below in the Webhooks section.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">status</code> <span class="type">string</span></td>
<td>Set to <code class="prettyprint">success</code> if the payload has been validated and queued. Will be set to <code class="prettyprint">error</code> if any of the store objects fails in validation.</td>
</tr>
<tr>
<td><code class="prettyprint">reference</code> <span class="type">string</span></td>
<td>A unique ID for the request. This is returned as part of the <a href="https://api-ordering-docs.urbanpiper.com/#store-configuration-update">webhook callback response</a>. Ideally, this should be used to keep track of the status for a particular request made from PoS/ERP system.<br><strong>NOTE:</strong> This will not be returned in case of an error.</td>
</tr>
<tr>
<td><code class="prettyprint">message</code> <span class="type">string</span></td>
<td>An explanatory message. In case of an error, it will specify the particular store object that failed validation.</td>
</tr>
</tbody></table>

<div name="store-actions-api" data-unique="store-actions-api"></div><h2 id="store-actions-api">Store Actions API</h2>
<pre class="highlight shell tab-shell" style="display: block;"><code>curl -X POST <span class="se">\</span>
  https://staging.urbanpiper.com/hub/api/v1/location/ <span class="se">\</span>
  -H <span class="s1">'Authorization: apikey testusername:testapikeys'</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -d <span class="s1">'{
    "location_ref_id": "105",
    "platforms": ["zomato", "swiggy"],
    "action": "enable"
}'</span>
</code></pre><pre class="highlight python tab-python" style="display: none;"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">"https://staging.urbanpiper.com/hub/api/v1/location/"</span>

<span class="n">payload</span> <span class="o">=</span> <span class="s">"{</span><span class="se">\t\"</span><span class="s">location_ref_id</span><span class="se">\"</span><span class="s">: </span><span class="se">\"</span><span class="s">105</span><span class="se">\"</span><span class="s">,</span><span class="se">\t\"</span><span class="s">platforms</span><span class="se">\"</span><span class="s">: [</span><span class="se">\"</span><span class="s">zomato</span><span class="se">\"</span><span class="s">, </span><span class="se">\"</span><span class="s">swiggy</span><span class="se">\"</span><span class="s">],</span><span class="se">\t\"</span><span class="s">action</span><span class="se">\"</span><span class="s">: </span><span class="se">\"</span><span class="s">enable</span><span class="se">\"</span><span class="s">}"</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">"application/json"</span><span class="p">,</span>
    <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">"apikey testusername:testapikeys"</span>
    <span class="p">}</span>

<span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="s">"POST"</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">payload</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
</code></pre><pre class="highlight javascript tab-javascript" style="display: none;"><code><span class="kd">var</span> <span class="nx">settings</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s2">"async"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="s2">"crossDomain"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="s2">"url"</span><span class="p">:</span> <span class="s2">"https://staging.urbanpiper.com/hub/api/v1/location/"</span><span class="p">,</span>
  <span class="s2">"method"</span><span class="p">:</span> <span class="s2">"POST"</span><span class="p">,</span>
  <span class="s2">"headers"</span><span class="p">:</span> <span class="p">{</span>
    <span class="s2">"Content-Type"</span><span class="p">:</span> <span class="s2">"application/json"</span><span class="p">,</span>
    <span class="s2">"Authorization"</span><span class="p">:</span> <span class="s2">"apikey testusername:testapikeys"</span>
  <span class="p">},</span>
  <span class="s2">"processData"</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="s2">"data"</span><span class="p">:</span> <span class="s2">"{\t\"location_ref_id\": \"105\",\t\"platforms\": [\"zomato\", \"swiggy\"],\t\"action\": \"enable\"}"</span>
<span class="p">}</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">(</span><span class="nx">settings</span><span class="p">).</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
<span class="p">});</span>
</code></pre><pre class="highlight java tab-java" style="display: none;"><code><span class="n">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OkHttpClient</span><span class="o">();</span>

<span class="n">MediaType</span> <span class="n">mediaType</span> <span class="o">=</span> <span class="n">MediaType</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"application/json"</span><span class="o">);</span>
<span class="n">RequestBody</span> <span class="n">body</span> <span class="o">=</span> <span class="n">RequestBody</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">mediaType</span><span class="o">,</span> <span class="s">"{\t\"location_ref_id\": \"105\",\t\"platforms\": [\"zomato\", \"swiggy\"],\t\"action\": \"enable\"}"</span><span class="o">);</span>
<span class="n">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
  <span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="s">"https://staging.urbanpiper.com/hub/api/v1/location/"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="n">body</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Authorization"</span><span class="o">,</span> <span class="s">"apikey testusername:testapikeys"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">build</span><span class="o">();</span>

<span class="n">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</code></pre><pre class="highlight php tab-php" style="display: none;"><code><span class="cp">&lt;?php</span>

<span class="nv">$request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">HttpRequest</span><span class="p">();</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setUrl</span><span class="p">(</span><span class="s1">'https://staging.urbanpiper.com/hub/api/v1/location/'</span><span class="p">);</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setMethod</span><span class="p">(</span><span class="nx">HTTP_METH_POST</span><span class="p">);</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setHeaders</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
  <span class="s1">'Cache-Control'</span> <span class="o">=&gt;</span> <span class="s1">'no-cache'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'apikey testusername:testapikeys'</span>
<span class="p">));</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setBody</span><span class="p">(</span><span class="s1">'{
    "location_ref_id": "105",
    "platforms": ["zomato", "swiggy"],
    "action": "enable"
}'</span><span class="p">);</span>

<span class="k">try</span> <span class="p">{</span>
  <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>

  <span class="k">echo</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">();</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">HttpException</span> <span class="nv">$ex</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$ex</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"success"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Task queued successfully"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This endpoint should be used to perform specific action for a particular store across different platforms.   </p>

<aside class="warning">
  <header>constraints &amp; expectations</header>

  <p>
    A <em>throttle limit</em> is applicable on this endpoint limiting the maximum number of requests/min to <b>20</b>. If you breach this threshold, the platform will respond with a <code>429</code> error response code and you will not be able to make new requests for a duration of <strong>1 min</strong>.
  </p>
  <p>
    <i>Payload size:</i> no limit as of now.
  </p>
  <p>
  <i>Expected Execution Time:</i> 30 secs to reflect in UrbanPiper platform.  
    <i>Aggregator platform:</i> no time-bound gurantees available as of now.
    </p>
</aside>

<p><strong>NOTE:</strong> Passing in a platform for which the store is not enabled, will have no result.</p>

<h4 id="request-url">Request URL</h4>

<p><span class="request-type get">POST</span><code class="prettyprint">/hub/api/v1/location/</code></p>

<h4 id="request-header">Request header</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">Authorization</code></td>
<td>API key based auth header. Refer <a href="https://api-ordering-docs.urbanpiper.com/#authentication">authentication</a>.</td>
</tr>
</tbody></table>

<h4 id="request-parameters">Request Parameters</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">location_ref_id</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The unique identifier of the store in the PoS/ERP system.</td>
</tr>
<tr>
<td><code class="prettyprint">platforms</code> <span class="param-required">required</span><span class="type">array[string]</span></td>
<td>List of platforms for which store needs to be acted upon.<br>The supported platforms are: <code class="prettyprint">urbanpiper</code>, <code class="prettyprint">zomato</code>, <code class="prettyprint">foodpanda</code>, <code class="prettyprint">swiggy</code>, <code class="prettyprint">ubereats</code></td>
</tr>
<tr>
<td><code class="prettyprint">action</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>One of the allowed actions:<br>– <code class="prettyprint">enable</code>: makes the store available<br>– <code class="prettyprint">disable</code>: makes the store unavailable.<br>– <code class="prettyprint">verify</code>: verifies the catalogue for the given store and provides error information if any via configured webhook.<br>– <code class="prettyprint">merge</code>: merges the catalogue from location data and updates the catalogue in mentioned platform.</td>
</tr>
</tbody></table>

<div name="managing-catalogue" data-unique="managing-catalogue"></div><h2 id="managing-catalogue">Managing catalogue</h2>
<pre class="highlight shell tab-shell" style="display: block;"><code>curl -v -X POST <span class="se">\</span>
  http://staging.urbanpiper.com/external/api/v1/inventory/locations/123/ <span class="se">\</span>
  -H <span class="s1">'Authorization: apikey testusername:testapikeys'</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -d <span class="s1">'{
    "categories":[
        {
            "ref_id":"C-123",
            "name":"Breads",
            "description":"Remote category åß˙",
            "sort_order":1,
            "active":true,
            "img_url":"https://static.giantbomb.com/uploads/scale_small/0/6087/2437349-pikachu.png",
            "translations": [{
                "language": "fr",
                "name": "...",
                "description": "..."
            }, {
                "language": "es",
                "name": "...",
                "description": "..."
            }]
        },
        {
            "ref_id":"C-124",
            "name":"Sliders",
            "description":"Another one ˚∫∆˙∫",
            "sort_order":1,
            "active":true,
            "img_url":"https://static.giantbomb.com/uploads/scale_small/0/6087/2437349-pikachu.png",
            "parent_ref_id":"C-123"
        }
    ],
    "flush_items": false,
    "items":[
        {
            "ref_id":"XX-1225",
            "title":"Whole grain",
            "available":true,
            "description":"Super healthy",
            "sold_at_store":true,
            "price":41.0,
            "current_stock":24,
            "recommended":true,
            "food_type":"2",
            "category_ref_ids":["C-123"],
            "translations": [{
                "language": "fr",
                "title": "...",
                "description": "..."
            }, {
                "language": "es",
                "title": "...",
                "description": "..."
            }],
            "tags": {
                "zomato": ["treat", "deal99"],
                "swiggy": ["pop", "edvm"]
            },
            "excluded_platforms": ["zomato", "swiggy"]
        },
        {
            "ref_id":"XX-1226",
            "title":"Parsley",
            "description":"very taasty",
            "available":false,
            "sold_at_store":true,
            "img_url":"http://image.com/media/2017/03/20/B50_500_x_500.png",
            "sort_order":123,
            "price":145.0,
            "current_stock":1,
            "category_ref_ids":["C-124"]
        }
    ],
    "option_groups":[
        {
            "ref_id": "OG-1234",
            "title": "This G-1 group",
            "min_selectable": 1,
            "max_selectable": 1,
            "active": true,
            "item_ref_ids": ["XX-1225", "XX-1226"]
        }, {
            "ref_id": "OG-1235",
            "title": "This G-2 group",
            "min_selectable": 1,
            "max_selectable": 1,
            "active": true,
            "item_ref_ids": ["XX-1225"],
            "translations": [{
                "language": "fr",
                "title": "...",
                "description": "..."
            }, {
                "language": "es",
                "title": "...",
                "description": "..."
            }]
        }
    ],
    "flush_options": false,
    "options":[
        {
            "ref_id":"opt-0112233",
            "title":"Opt integra 1",
            "description":"option through integration",
            "weight":123,
            "available":true,
            "price":123.23,
            "sold_at_store":true,
            "opt_grp_ref_ids": ["OG-1234"],
            "nested_opt_grps": ["OG-1235"],
            "translations": [{
                "language": "fr",
                "title": "...",
                "description": "..."
            }, {
                "language": "es",
                "title": "...",
                "description": "..."
            }]
        }, {
            "ref_id":"opt-0112234",
            "title":"Opt integra 2",
            "description":"option through integration",
            "weight":123,
            "available":true,
            "price":123.23,
            "sold_at_store":true,
            "opt_grp_ref_ids": ["OG-1235"]
        }
    ],
    "taxes": [
      {
        "ref_id": "t23",
        "title": "GST",
        "description": "5% GST on all items",
        "active": true,
        "structure": {
            "type": "percentage",
            "applicable_on": "item.price",
            "value": 5
        }
        "item_ref_ids": []
      }
    ],
    "charges": [
      {
        "ref_id": "c45",
        "title": "Packing Charge",
        "description": "Packing Charge per Item Quantity",
        "active": true,
        "structure": {
            "type": "percentage",
            "applicable_on": "item.quantity",
            "value": 10
        },
        "fulfillment_modes": [],
        "excluded_platforms": [],
        "item_ref_ids": []
      }
    ]
    "callback_url":"https://enp27ugn0clof.x.pipedream.net/"
}'</span>
</code></pre><pre class="highlight python tab-python" style="display: none;"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">"https://staging.urbanpiper.com/external/api/v1/inventory/locations/123/"</span>

<span class="n">payload</span> <span class="o">=</span> <span class="s">"{</span><span class="se">\"</span><span class="s">categories</span><span class="se">\"</span><span class="s">:[{</span><span class="se">\"</span><span class="s">ref_id</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">C-123</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">name</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Breads</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">description</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Remote category åß˙</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">sort_order</span><span class="se">\"</span><span class="s">:1,</span><span class="se">\"</span><span class="s">active</span><span class="se">\"</span><span class="s">:true,</span><span class="se">\"</span><span class="s">img_url</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">https://static.giantbomb.com/uploads/scale_small/0/6087/2437349-pikachu.png</span><span class="se">\"</span><span class="s">},{</span><span class="se">\"</span><span class="s">ref_id</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">C-124</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">name</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Sliders</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">description</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Another one ˚∫∆˙∫</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">sort_order</span><span class="se">\"</span><span class="s">:1,</span><span class="se">\"</span><span class="s">active</span><span class="se">\"</span><span class="s">:true,</span><span class="se">\"</span><span class="s">img_url</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">https://static.giantbomb.com/uploads/scale_small/0/6087/2437349-pikachu.png</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">parent_ref_id</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">C-123</span><span class="se">\"</span><span class="s">}],</span><span class="se">\"</span><span class="s">items</span><span class="se">\"</span><span class="s">:[{</span><span class="se">\"</span><span class="s">ref_id</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">XX-1225</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">title</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Whole grain</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">available</span><span class="se">\"</span><span class="s">:true,</span><span class="se">\"</span><span class="s">description</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Super healthy</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">sold_at_store</span><span class="se">\"</span><span class="s">:true,</span><span class="se">\"</span><span class="s">price</span><span class="se">\"</span><span class="s">:41.0,</span><span class="se">\"</span><span class="s">current_stock</span><span class="se">\"</span><span class="s">:24,</span><span class="se">\"</span><span class="s">recommended</span><span class="se">\"</span><span class="s">:true,</span><span class="se">\"</span><span class="s">food_type</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">2</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">category_ref_ids</span><span class="se">\"</span><span class="s">:[</span><span class="se">\"</span><span class="s">C-123</span><span class="se">\"</span><span class="s">]},{</span><span class="se">\"</span><span class="s">ref_id</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">XX-1226</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">title</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Parsley</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">description</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">very taasty</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">available</span><span class="se">\"</span><span class="s">:false,</span><span class="se">\"</span><span class="s">sold_at_store</span><span class="se">\"</span><span class="s">:true,</span><span class="se">\"</span><span class="s">img_url</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">http://image.com/media/2017/03/20/B50_500_x_500.png</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">sort_order</span><span class="se">\"</span><span class="s">:123,</span><span class="se">\"</span><span class="s">price</span><span class="se">\"</span><span class="s">:145.0,</span><span class="se">\"</span><span class="s">current_stock</span><span class="se">\"</span><span class="s">:1,</span><span class="se">\"</span><span class="s">category_ref_ids</span><span class="se">\"</span><span class="s">:[</span><span class="se">\"</span><span class="s">C-124</span><span class="se">\"</span><span class="s">]}],</span><span class="se">\"</span><span class="s">option_groups</span><span class="se">\"</span><span class="s">:[{</span><span class="se">\"</span><span class="s">ref_id</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">OG-1234</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">title</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">This G-1 group</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">min_selectable</span><span class="se">\"</span><span class="s">:1,</span><span class="se">\"</span><span class="s">max_selectable</span><span class="se">\"</span><span class="s">:1,</span><span class="se">\"</span><span class="s">active</span><span class="se">\"</span><span class="s">:true},{</span><span class="se">\"</span><span class="s">ref_id</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">OG-1235</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">title</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">This G-2 group</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">min_selectable</span><span class="se">\"</span><span class="s">:1,</span><span class="se">\"</span><span class="s">max_selectable</span><span class="se">\"</span><span class="s">:1,</span><span class="se">\"</span><span class="s">active</span><span class="se">\"</span><span class="s">:true}],</span><span class="se">\"</span><span class="s">options</span><span class="se">\"</span><span class="s">:[{</span><span class="se">\"</span><span class="s">ref_id</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">opt-0112233</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">title</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Opt integra 1</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">description</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">option through integration</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">weight</span><span class="se">\"</span><span class="s">:123,</span><span class="se">\"</span><span class="s">available</span><span class="se">\"</span><span class="s">:true,</span><span class="se">\"</span><span class="s">price</span><span class="se">\"</span><span class="s">:123.23,</span><span class="se">\"</span><span class="s">sold_at_store</span><span class="se">\"</span><span class="s">:true,</span><span class="se">\"</span><span class="s">opt_grp_ref_ids</span><span class="se">\"</span><span class="s">:[</span><span class="se">\"</span><span class="s">OG-1234</span><span class="se">\"</span><span class="s">],</span><span class="se">\"</span><span class="s">nested_opt_grps</span><span class="se">\"</span><span class="s">:[</span><span class="se">\"</span><span class="s">OG-1235</span><span class="se">\"</span><span class="s">]},{</span><span class="se">\"</span><span class="s">ref_id</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">opt-0112234</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">title</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">Opt integra 2</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">description</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">option through integration</span><span class="se">\"</span><span class="s">,</span><span class="se">\"</span><span class="s">weight</span><span class="se">\"</span><span class="s">:123,</span><span class="se">\"</span><span class="s">available</span><span class="se">\"</span><span class="s">:true,</span><span class="se">\"</span><span class="s">price</span><span class="se">\"</span><span class="s">:123.23,</span><span class="se">\"</span><span class="s">sold_at_store</span><span class="se">\"</span><span class="s">:true,</span><span class="se">\"</span><span class="s">opt_grp_ref_ids</span><span class="se">\"</span><span class="s">:[</span><span class="se">\"</span><span class="s">OG-1235</span><span class="se">\"</span><span class="s">]}],</span><span class="se">\"</span><span class="s">callback_url</span><span class="se">\"</span><span class="s">:</span><span class="se">\"</span><span class="s">https://enp27ugn0clof.x.pipedream.net/</span><span class="se">\"</span><span class="s">}"</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">"application/json"</span><span class="p">,</span>
    <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">"apikey testusername:testapikeys"</span>
    <span class="p">}</span>

<span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="s">"POST"</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">payload</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
</code></pre><pre class="highlight javascript tab-javascript" style="display: none;"><code><span class="kr">import</span> <span class="nx">requests</span>

<span class="nx">url</span> <span class="o">=</span> <span class="s2">"https://staging.urbanpiper.com/external/api/v1/inventory/locations/123/"</span>

<span class="nx">payload</span> <span class="o">=</span> <span class="s2">"{\"categories\":[{\"ref_id\":\"C-123\",\"name\":\"Breads\",\"description\":\"Remote category åß˙\",\"sort_order\":1,\"active\":true,\"img_url\":\"https://static.giantbomb.com/uploads/scale_small/0/6087/2437349-pikachu.png\"},{\"ref_id\":\"C-124\",\"name\":\"Sliders\",\"description\":\"Another one ˚∫∆˙∫\",\"sort_order\":1,\"active\":true,\"img_url\":\"https://static.giantbomb.com/uploads/scale_small/0/6087/2437349-pikachu.png\",\"parent_ref_id\":\"C-123\"}],\"items\":[{\"ref_id\":\"XX-1225\",\"title\":\"Whole grain\",\"available\":true,\"description\":\"Super healthy\",\"sold_at_store\":true,\"price\":41.0,\"current_stock\":24,\"recommended\":true,\"food_type\":\"2\",\"category_ref_ids\":[\"C-123\"]},{\"ref_id\":\"XX-1226\",\"title\":\"Parsley\",\"description\":\"very taasty\",\"available\":false,\"sold_at_store\":true,\"img_url\":\"http://image.com/media/2017/03/20/B50_500_x_500.png\",\"sort_order\":123,\"price\":145.0,\"current_stock\":1,\"category_ref_ids\":[\"C-124\"]}],\"option_groups\":[{\"ref_id\":\"OG-1234\",\"title\":\"This G-1 group\",\"min_selectable\":1,\"max_selectable\":1,\"active\":true},{\"ref_id\":\"OG-1235\",\"title\":\"This G-2 group\",\"min_selectable\":1,\"max_selectable\":1,\"active\":true}],\"options\":[{\"ref_id\":\"opt-0112233\",\"title\":\"Opt integra 1\",\"description\":\"option through integration\",\"weight\":123,\"available\":true,\"price\":123.23,\"sold_at_store\":true,\"opt_grp_ref_ids\":[\"OG-1234\"],\"nested_opt_grps\":[\"OG-1235\"]},{\"ref_id\":\"opt-0112234\",\"title\":\"Opt integra 2\",\"description\":\"option through integration\",\"weight\":123,\"available\":true,\"price\":123.23,\"sold_at_store\":true,\"opt_grp_ref_ids\":[\"OG-1235\"]}],\"callback_url\":\"https://enp27ugn0clof.x.pipedream.net/\"}"</span>
<span class="nx">headers</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s1">'Content-Type'</span><span class="p">:</span> <span class="s2">"application/json"</span><span class="p">,</span>
    <span class="s1">'Authorization'</span><span class="p">:</span> <span class="s2">"apikey testusername:testapikeys"</span>
    <span class="p">}</span>

<span class="nx">response</span> <span class="o">=</span> <span class="nx">requests</span><span class="p">.</span><span class="nx">request</span><span class="p">(</span><span class="s2">"POST"</span><span class="p">,</span> <span class="nx">url</span><span class="p">,</span> <span class="nx">data</span><span class="o">=</span><span class="nx">payload</span><span class="p">,</span> <span class="nx">headers</span><span class="o">=</span><span class="nx">headers</span><span class="p">)</span>

<span class="nx">print</span><span class="p">(</span><span class="nx">response</span><span class="p">.</span><span class="nx">text</span><span class="p">)</span>
</code></pre><pre class="highlight java tab-java" style="display: none;"><code><span class="n">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OkHttpClient</span><span class="o">();</span>

<span class="n">MediaType</span> <span class="n">mediaType</span> <span class="o">=</span> <span class="n">MediaType</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"application/json"</span><span class="o">);</span>
<span class="n">RequestBody</span> <span class="n">body</span> <span class="o">=</span> <span class="n">RequestBody</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">mediaType</span><span class="o">,</span> <span class="s">"{\"categories\":[{\"ref_id\":\"C-123\",\"name\":\"Breads\",\"description\":\"Remote category åß˙\",\"sort_order\":1,\"active\":true,\"img_url\":\"https://static.giantbomb.com/uploads/scale_small/0/6087/2437349-pikachu.png\"},{\"ref_id\":\"C-124\",\"name\":\"Sliders\",\"description\":\"Another one ˚∫∆˙∫\",\"sort_order\":1,\"active\":true,\"img_url\":\"https://static.giantbomb.com/uploads/scale_small/0/6087/2437349-pikachu.png\",\"parent_ref_id\":\"C-123\"}],\"items\":[{\"ref_id\":\"XX-1225\",\"title\":\"Whole grain\",\"available\":true,\"description\":\"Super healthy\",\"sold_at_store\":true,\"price\":41.0,\"current_stock\":24,\"recommended\":true,\"food_type\":\"2\",\"category_ref_ids\":[\"C-123\"]},{\"ref_id\":\"XX-1226\",\"title\":\"Parsley\",\"description\":\"very taasty\",\"available\":false,\"sold_at_store\":true,\"img_url\":\"http://image.com/media/2017/03/20/B50_500_x_500.png\",\"sort_order\":123,\"price\":145.0,\"current_stock\":1,\"category_ref_ids\":[\"C-124\"]}],\"option_groups\":[{\"ref_id\":\"OG-1234\",\"title\":\"This G-1 group\",\"min_selectable\":1,\"max_selectable\":1,\"active\":true},{\"ref_id\":\"OG-1235\",\"title\":\"This G-2 group\",\"min_selectable\":1,\"max_selectable\":1,\"active\":true}],\"options\":[{\"ref_id\":\"opt-0112233\",\"title\":\"Opt integra 1\",\"description\":\"option through integration\",\"weight\":123,\"available\":true,\"price\":123.23,\"sold_at_store\":true,\"opt_grp_ref_ids\":[\"OG-1234\"],\"nested_opt_grps\":[\"OG-1235\"]},{\"ref_id\":\"opt-0112234\",\"title\":\"Opt integra 2\",\"description\":\"option through integration\",\"weight\":123,\"available\":true,\"price\":123.23,\"sold_at_store\":true,\"opt_grp_ref_ids\":[\"OG-1235\"]}],\"callback_url\":\"https://enp27ugn0clof.x.pipedream.net/\"}"</span><span class="o">);</span>
<span class="n">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
  <span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="s">"https://staging.urbanpiper.com/external/api/v1/inventory/locations/123/"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="n">body</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Authorization"</span><span class="o">,</span> <span class="s">"apikey testusername:testapikeys"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">build</span><span class="o">();</span>

<span class="n">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</code></pre><pre class="highlight php tab-php" style="display: none;"><code><span class="cp">&lt;?php</span>

<span class="nv">$request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">HttpRequest</span><span class="p">();</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setUrl</span><span class="p">(</span><span class="s1">'https://staging.urbanpiper.com/external/api/v1/inventory/locations/123/'</span><span class="p">);</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setMethod</span><span class="p">(</span><span class="nx">HTTP_METH_POST</span><span class="p">);</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setHeaders</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'apikey testusername:testapikeys'</span><span class="p">,</span>
  <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'application/json'</span>
<span class="p">));</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setBody</span><span class="p">(</span><span class="s1">'{"categories":[{"ref_id":"C-123","name":"Breads","description":"Remote category åß˙","sort_order":1,"active":true,"img_url":"https://static.giantbomb.com/uploads/scale_small/0/6087/2437349-pikachu.png"},{"ref_id":"C-124","name":"Sliders","description":"Another one ˚∫∆˙∫","sort_order":1,"active":true,"img_url":"https://static.giantbomb.com/uploads/scale_small/0/6087/2437349-pikachu.png","parent_ref_id":"C-123"}],"items":[{"ref_id":"XX-1225","title":"Whole grain","available":true,"description":"Super healthy","sold_at_store":true,"price":41.0,"current_stock":24,"recommended":true,"food_type":"2","category_ref_ids":["C-123"]},{"ref_id":"XX-1226","title":"Parsley","description":"very taasty","available":false,"sold_at_store":true,"img_url":"http://image.com/media/2017/03/20/B50_500_x_500.png","sort_order":123,"price":145.0,"current_stock":1,"category_ref_ids":["C-124"]}],"option_groups":[{"ref_id":"OG-1234","title":"This G-1 group","min_selectable":1,"max_selectable":1,"active":true},{"ref_id":"OG-1235","title":"This G-2 group","min_selectable":1,"max_selectable":1,"active":true}],"options":[{"ref_id":"opt-0112233","title":"Opt integra 1","description":"option through integration","weight":123,"available":true,"price":123.23,"sold_at_store":true,"opt_grp_ref_ids":["OG-1234"],"nested_opt_grps":["OG-1235"]},{"ref_id":"opt-0112234","title":"Opt integra 2","description":"option through integration","weight":123,"available":true,"price":123.23,"sold_at_store":true,"opt_grp_ref_ids":["OG-1235"]}],"callback_url":"https://enp27ugn0clof.x.pipedream.net/"}'</span><span class="p">);</span>

<span class="k">try</span> <span class="p">{</span>
  <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>

  <span class="k">echo</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">();</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">HttpException</span> <span class="nv">$ex</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$ex</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"success"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Your request has been queued. Once processed, a callback will be issued to the configured webhook(s) or the URL passed in"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"reference"</span><span class="p">:</span><span class="w"> </span><span class="s2">"6ceae1e171bb44fc983690d4727b69b1"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This endpoint allows an authorised PoS/ERP system to manage the catalogue for a given store. A <em>catalogue</em> is considered to comprise of the following objects:  </p>

<ul>
<li>Categories</li>
<li>Items<br></li>
<li>Item Option Groups<br></li>
<li>Item Options</li>
<li>Taxes</li>
<li>Charges</li>
</ul>

<p>In the UrbanPiper system, the catalogue is handled in a ​<em>federated​</em> structure. For each of the catalogue objects, a <em>master record</em> is maintained and then for each store, references are set to the <em>master</em> catalogue objects. The <em>master</em> catalogue can be considered to be the universal set of all catalogue objects available across all stores.</p>

<p>When a new catalogue object is created, the system will first check whether the <em>master</em> catalogue has a copy of the object. If not, the object will be created at the <em>master</em> level and then a reference is set at the store level.  </p>

<p><strong>NOTE:</strong> At present, <em>categories</em> and <em>option groups</em> are maintained only at the <em>master</em> level, since there aren’t many scenarios where the metadata for these objects would vary between stores.</p>

<p>For an <em>item</em>, the metadata that varies between stores are: <em>price</em>, <em>stock</em> and <em>availability</em>.<br>
And for an <em>item option</em>, this can be <em>price</em> and <em>availability</em>.</p>

<p>Similar to the endpoint for <a href="https://api-ordering-docs.urbanpiper.com/#adding-updating-stores">adding/updating stores</a>, this request performs a basic verification of the payload, and returns a response immediately.​ The heavy-lifting work of parsing and updating all items is done ​asynchronously. If you wish to receive a detailed response after all the processing is done, please set a callback URL to which the platform will ​POST​ an update or configure a webhook. See below for more information.</p>

<aside class="warning">
  <header>constraints &amp; expectations</header>

  <p>
    A <em>throttle limit</em> is applicable on this endpoint limiting the maximum of <b>1 request/5 secs</b>. If you breach this threshold, the platform will respond with a <code>429</code> error response code and you will not be able to make new requests for a duration of <strong>5 seconds</strong>.
  </p>
  <p>
    <i>Payload size:</i> for a single request, you cannot create/update more than <strong>1000</strong> items and <strong>1000</strong> options.
  </p>
  <p>
    This endpoint processes its tasks <i>asynchronously</i> by utilising a queueing mechanism. The time it takes to respond to a request you place depends upon: the <i>current backlog</i> on the queue, and, the <i>payload size</i>.  
    While we can’t provide any guarantees on the queue, but our infrastructure is equipped to ensure with 99% probability that you will receive a response within <b>10 minutes</b>.</p>
</aside>

<h4 id="request-url">Request URL</h4>

<p><span class="request-type get">POST</span><code class="prettyprint">/external/api/v1/inventory/locations/:location_ref_id/</code></p>

<h4 id="request-header">Request header</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">Authorization</code></td>
<td>API key based auth header. Refer <a href="https://api-ordering-docs.urbanpiper.com/#authentication">authentication</a>.</td>
</tr>
</tbody></table>

<h4 id="request-query-parameters">Request Query Parameters</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">location_ref_id</code></td>
<td>This is a <em>path variable</em>. Set it to the ID associated with the store in the PoS/ERP system.<br><strong>NOTE:</strong> If you only wish to update the data at the <em>master</em> catalogue level, pass in a value of <code class="prettyprint">-1</code> for the store reference ID.</td>
</tr>
</tbody></table>

<h4 id="request-body-parameters">Request Body Parameters</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">callback_url</code><span class="param-optional">optional</span><span class="type">string</span></td>
<td>The URL to which a callback update should be sent after the entire inventory update has been processed.</td>
</tr>
<tr>
<td><code class="prettyprint">flush_items</code><span class="param-optional">optional</span><span class="type">boolean</span></td>
<td>Indicates whether all the previously available <em>items</em> in the catalogue should be removed. See <a href="https://api-ordering-docs.urbanpiper.com/#handling-certain-use-cases">this section</a> to know more.</td>
</tr>
<tr>
<td><code class="prettyprint">flush_options</code><span class="param-optional">optional</span><span class="type">boolean</span></td>
<td>Indicates whether all the previously available <em>options</em> in the catalogue should be removed. See <a href="https://api-ordering-docs.urbanpiper.com/#handling-certain-use-cases">this section</a> to know more.</td>
</tr>
<tr>
<td><code class="prettyprint">categories</code><span class="type">array[object]</span></td>
<td>A list of categories. See <a href="https://api-ordering-docs.urbanpiper.com/#categories">below</a> for more information.</td>
</tr>
<tr>
<td><code class="prettyprint">items</code><span class="type">array[object]</span></td>
<td>A list of items. See <a href="https://api-ordering-docs.urbanpiper.com/#items">below</a> for more information.</td>
</tr>
<tr>
<td><code class="prettyprint">option_groups</code><span class="type">array[object]</span></td>
<td>A list of option groups. See <a href="https://api-ordering-docs.urbanpiper.com/#option-groups">below</a> for more information.</td>
</tr>
<tr>
<td><code class="prettyprint">options</code><span class="type">array[object]</span></td>
<td>A list of options. See <a href="https://api-ordering-docs.urbanpiper.com/#options">below</a> for more information.</td>
</tr>
<tr>
<td><code class="prettyprint">taxes</code><span class="type">array[object]</span></td>
<td>A list of taxes. See <a href="https://api-ordering-docs.urbanpiper.com/#taxes">below</a> for more information.</td>
</tr>
<tr>
<td><code class="prettyprint">charges</code><span class="type">array[object]</span></td>
<td>A list of charges. See <a href="https://api-ordering-docs.urbanpiper.com/#charges">below</a> for more information.</td>
</tr>
</tbody></table>

<p>The rest of the parameters for this request need to be passed in the request body as a JSON object. Depending on your need, you can either pass in the data for all catalogue objects (<code class="prettyprint">categories</code>, <code class="prettyprint">items</code>, <code class="prettyprint">option_groups</code>, <code class="prettyprint">options</code>, <code class="prettyprint">taxes</code>, <code class="prettyprint">charges</code>) or just the ones that are required. Each of these catalogue objects are <em>optional</em>. Passing in at least one of the catalogue objects is required.</p>

<p><strong>NOTE:</strong> Since the same endpoint can be used for both adding and updating cataglogue objects, the required set of attributes differ based on the context of the request. The constraints will be specified for the attributes in their value descriptions.</p>

<aside class="info">
  <b>Clearing/Flushing all <code>items</code> and <code>options</code> from the catalogue</b><br><br>
  <p>
    When you want to disable an <em>item</em> or <em>option</em> for <em>all</em> stores, you do not need to make a request with the <code>availability</code> attribute set to <code>false</code> for every store configured. Since, the catalogue structure in UrbanPiper is <em>federated</em>, you can simply disable the <em>item</em> or <em>option</em> at the <em>root</em> level, and it will apply for all stores.
  </p>
  <p>
    To make a request to set the <em>item</em> or <em>option</em> state at the <em>root</em> level, you simply need to set the <code>location_ref_id</code> to <code>-1</code> while making the request.
  </p>
</aside>

<aside class="info">

  <b>Disabling an <code>item</code> or <code>option</code> for all Stores</b><br><br>
  <p>
    When you want to disable an <em>item</em> or <em>option</em> for <em>all</em> stores, you do not need to make a request with the <code>availability</code> attribute set to <code>false</code> for every store configured. Since, the catalogue structure in UrbanPiper is <em>federated</em>, you can simply disable the <em>item</em> or <em>option</em> at the <em>root</em> level, and it will apply for all stores.
  </p>
  <p>
    To make a request to set the <em>item</em> or <em>option</em> state at the <em>root</em> level, you simply need to set the <code>location_ref_id</code> to <code>-1</code> while making the request.
  </p>
</aside>

<h4 id="categories">Categories</h4>

<p>Array of <em>category</em> objects.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">ref_id</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The unique ID of the category.</td>
</tr>
<tr>
<td><code class="prettyprint">name</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The name of the category.<br><em>Optional</em> for updates.</td>
</tr>
<tr>
<td><code class="prettyprint">description</code> <span class="type">string</span></td>
<td>A description for the category.</td>
</tr>
<tr>
<td><code class="prettyprint">sort_order</code> <span class="type">integer</span></td>
<td>The position at which this category should appear when a list of categories is displayed. Default is set to <code class="prettyprint">0</code>.</td>
</tr>
<tr>
<td><code class="prettyprint">active</code> <span class="type">boolean</span></td>
<td>Indicates whether the category exists. If set to <code class="prettyprint">false</code>, all items belonging to this category will also be considered <em>inactive</em>.</td>
</tr>
<tr>
<td><code class="prettyprint">img_url</code> <span class="type">string</span></td>
<td>Link to the category’s image.</td>
</tr>
<tr>
<td><code class="prettyprint">parent_ref_id</code> <span class="type">string</span></td>
<td>The unique ID of a parent category.<br><strong>NOTE:</strong> The UrbanPiper platform only supports a single level of sub-categories.</td>
</tr>
<tr>
<td><code class="prettyprint">translations</code> <span class="type">array[objects]</span></td>
<td>An array of translation objects - each object specifies a translated value for the <code class="prettyprint">name</code> and <code class="prettyprint">description</code> attributes.</td>
</tr>
<tr>
<td><code class="prettyprint">language</code> <span class="type">string</span></td>
<td>The 2-letter (<a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO-639-1</a> compliant) language code. At present, the following languages are supported:<br>– <code class="prettyprint">hi</code>: Hindi<br>– <code class="prettyprint">ar</code>: Arabic<br>– <code class="prettyprint">ja</code>: Japanese<br>– <code class="prettyprint">pt</code>: Portugues<br>– <code class="prettyprint">fr</code>: French<br>– <code class="prettyprint">es</code>: Spanish</td>
</tr>
</tbody></table>

<h4 id="items">Items</h4>

<p>Array of <em>Item</em> objects.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">ref_id</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The ID of the item as configured in the PoS/ERP system.</td>
</tr>
<tr>
<td><code class="prettyprint">title</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The title of the item.<br><em>Optional</em> for updates.</td>
</tr>
<tr>
<td><code class="prettyprint">price</code> <span class="param-required">required</span><span class="type">float</span></td>
<td>The price of the item at the store. If a new item has been created, this also serves as the base item price.<br><em>Optional</em> for updates.</td>
</tr>
<tr>
<td><code class="prettyprint">description</code> <span class="type">string</span></td>
<td>Description of the item</td>
</tr>
<tr>
<td><code class="prettyprint">sold_at_store</code> <span class="type">boolean</span></td>
<td>Indicates whether this item is associated with the store.</td>
</tr>
<tr>
<td><code class="prettyprint">available</code> <span class="type">boolean</span></td>
<td>Indicates whether this item is currently enabled to be sold at the store. If it’s set to <code class="prettyprint">false</code>, it means that while the item is associated with the store, it is not available for selling at the moment.</td>
</tr>
<tr>
<td><code class="prettyprint">sort_order</code> <span class="type">integer</span></td>
<td>The position at which this category should appear when a list of categories is displayed. Default is set to <code class="prettyprint">0</code>.</td>
</tr>
<tr>
<td><code class="prettyprint">current_stock</code> <span class="type">integer</span></td>
<td>The stock of the item at the outlet. If the item is never supposed to go out of stock, set this to <code class="prettyprint">-1</code>.</td>
</tr>
<tr>
<td><code class="prettyprint">category_id</code> <span class="type">integer</span></td>
<td>Should you have access to the <em>categories</em> configured in UrbanPiper’s platform through Quint, you can associate this item to a <em>category</em> by specifying its ID in the UrbanPIper platform.</td>
</tr>
<tr>
<td><code class="prettyprint">category_ref_ids</code> <span class="type">array[string]</span></td>
<td>Associate a list of categories, identified by their unique IDs in the PoS/ERP system, with the item. If both <code class="prettyprint">category_id</code> and this attribute is provided, this attribute holds precedence.</td>
</tr>
<tr>
<td><code class="prettyprint">food_type</code> <span class="type">integer</span></td>
<td>The classification of the item based on the following:<br><code class="prettyprint">1</code>: Vegetarian<br><code class="prettyprint">2</code>: Non-vegetarian<br><code class="prettyprint">3</code>: Eggetarian<br><code class="prettyprint">4</code>: Not specified.</td>
</tr>
<tr>
<td><code class="prettyprint">recommended</code> <span class="type">boolean</span></td>
<td>Indicates whether this item is a special/recommended item. Enhances the user-experience of the merchant website/apps.</td>
</tr>
<tr>
<td><code class="prettyprint">img_url</code> <span class="type">string</span></td>
<td>The URL of the item’s image. This should be a publicly accessible link.</td>
</tr>
<tr>
<td><code class="prettyprint">translations</code> <span class="type">array[objects]</span></td>
<td>An array of translation objects - each object specifies a translated value for the <code class="prettyprint">title</code> and <code class="prettyprint">description</code> attributes.</td>
</tr>
<tr>
<td><code class="prettyprint">language</code> <span class="type">string</span></td>
<td>The 2-letter (<a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO-639-1</a> compliant) language code. At present, the following languages are supported:<br>– <code class="prettyprint">hi</code>: Hindi<br>– <code class="prettyprint">ar</code>: Arabic<br>– <code class="prettyprint">ja</code>: Japanese<br>– <code class="prettyprint">pt</code>: Portugues<br>– <code class="prettyprint">fr</code>: French<br>– <code class="prettyprint">es</code>: Spanish.</td>
</tr>
<tr>
<td><code class="prettyprint">tags</code> <span class="type">object</span></td>
<td>Key being the tag group and value being the tags associated with the group.</td>
</tr>
<tr>
<td><code class="prettyprint">excluded_platforms</code> <span class="type">array[string]</span></td>
<td>list of platforms from which the item to be excluded from. By default items are part of all platforms associated with the business. If there is a special case, then the item should be excluded explicitly.</td>
</tr>
</tbody></table>

<h4 id="option-groups">Option Groups</h4>

<p>Array of <em>Option Group</em> objects.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">ref_id</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The ID of the option group as configured in the PoS/ERP system.</td>
</tr>
<tr>
<td><code class="prettyprint">title</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The title of the option group.<br><em>Optional</em> for updates.</td>
</tr>
<tr>
<td><code class="prettyprint">description</code> <span class="type">string</span></td>
<td>A suitable description for the option group.</td>
</tr>
<tr>
<td><code class="prettyprint">min_selectable</code> <span class="type">integer</span></td>
<td>The minimum number of options belonging to this group, that need to be selected when placing an order. Defaults to <code class="prettyprint">0</code>.</td>
</tr>
<tr>
<td><code class="prettyprint">max_selectable</code> <span class="type">integer</span></td>
<td>The maximum number of options belonging to this group, that can be selected when placing an order. Defaults to <code class="prettyprint">-1</code> - indicating that a user can select as many options as are available.</td>
</tr>
<tr>
<td><code class="prettyprint">sort_order</code> <span class="type">integer</span></td>
<td>The index at which this option group should appear when a list of option groups is displayed.</td>
</tr>
<tr>
<td><code class="prettyprint">active</code> <span class="type">boolean</span></td>
<td>Indicates whether this option group is active. If set to <code class="prettyprint">false</code>, all <em>options</em> belonging to this group will also not be available for ordering.</td>
</tr>
<tr>
<td><code class="prettyprint">display_inline</code> <span class="type">boolean</span></td>
<td>Changes the user experience on the website - if set to <code class="prettyprint">true</code>, this option group will be displayed at the same visual level as its parent, provided this option group is <em>nested</em>.</td>
</tr>
<tr>
<td><code class="prettyprint">item_ref_ids</code> <span class="type">array[string]</span></td>
<td>A list of item reference IDs to which this option group is associated.</td>
</tr>
<tr>
<td><code class="prettyprint">translations</code> <span class="type">array[objects]</span></td>
<td>An array of translation objects - each object specifies a translated value for the <code class="prettyprint">title</code> and <code class="prettyprint">description</code> attributes.</td>
</tr>
<tr>
<td><code class="prettyprint">language</code> <span class="type">string</span></td>
<td>The 2-letter (<a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO-639-1</a> compliant) language code. At present, the following languages are supported:<br>– <code class="prettyprint">hi</code>: Hindi<br>– <code class="prettyprint">ar</code>: Arabic<br>– <code class="prettyprint">ja</code>: Japanese<br>– <code class="prettyprint">pt</code>: Portugues<br>– <code class="prettyprint">fr</code>: French<br>– <code class="prettyprint">es</code>: Spanish</td>
</tr>
</tbody></table>

<h4 id="options">Options</h4>

<p>Array of <em>Option</em> objects.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">ref_id</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The ID of the option as configured in the PoS/ERP system. If no option with this reference ID is found in the UrbanPiper system, a new one will be created.</td>
</tr>
<tr>
<td><code class="prettyprint">title</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The title of the Option.<br><em>Optional</em> for updates.</td>
</tr>
<tr>
<td><code class="prettyprint">price</code> <span class="param-required">required</span><span class="type">float</span></td>
<td>The price of the option at the store. If a new option has been created, this also serves as the base option  price.<br><em>Optional</em> for updates.</td>
</tr>
<tr>
<td><code class="prettyprint">description</code> <span class="type">string</span></td>
<td>Description of the option</td>
</tr>
<tr>
<td><code class="prettyprint">available</code> <span class="type">boolean</span></td>
<td>Indicates whether this option is currently enabled to be sold at the store. If it’s set to false, it means that while the option  is associated  with the store, but at the moment it is not available for selling.</td>
</tr>
<tr>
<td><code class="prettyprint">sold_at_store</code> <span class="type">boolean</span></td>
<td>Indicates whether this option is associated with the store.</td>
</tr>
<tr>
<td><code class="prettyprint">weight</code> <span class="type">integer</span></td>
<td>This weight of the option in grams.</td>
</tr>
<tr>
<td><code class="prettyprint">food_type</code> <span class="type">integer</span></td>
<td>The classification of the option based on the following:<br><code class="prettyprint">1</code>: Vegetarian<br><code class="prettyprint">2</code>: Non-vegetarian<br><code class="prettyprint">3</code>: Eggetarian<br><code class="prettyprint">4</code>: Not specified.</td>
</tr>
<tr>
<td><code class="prettyprint">translations</code> <span class="type">array[objects]</span></td>
<td>An array of translation objects - each object specifies a translated value for the <code class="prettyprint">title</code> and <code class="prettyprint">description</code> attributes.</td>
</tr>
<tr>
<td><code class="prettyprint">language</code> <span class="type">string</span></td>
<td>The 2-letter (<a href="https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes">ISO-639-1</a> compliant) language code. At present, the following languages are supported:<br>– <code class="prettyprint">hi</code>: Hindi<br>– <code class="prettyprint">ar</code>: Arabic<br>– <code class="prettyprint">ja</code>: Japanese<br>– <code class="prettyprint">pt</code>: Portugues<br>– <code class="prettyprint">fr</code>: French<br>– <code class="prettyprint">es</code>: Spanish</td>
</tr>
</tbody></table>

<h4 id="taxes">Taxes</h4>

<p>Array of <em>Tax</em> objects.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">ref_id</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The ID of the tax as configured in the PoS/ERP system. If no tax with this reference ID is found in the UrbanPiper system, a new one will be created.</td>
</tr>
<tr>
<td><code class="prettyprint">title</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The title of the tax.<br><em>Optional</em> for updates.</td>
</tr>
<tr>
<td><code class="prettyprint">description</code> <span class="type">string</span></td>
<td>Description of the tax</td>
</tr>
<tr>
<td><code class="prettyprint">active</code> <span class="type">boolean</span></td>
<td>Indicates whether tax is currently active or not</td>
</tr>
<tr>
<td><code class="prettyprint">structure</code> <span class="type">Object</span></td>
<td>defines the structure of the tax</td>
</tr>
<tr>
<td><code class="prettyprint">type</code> <span class="type">string</span></td>
<td>type of tax, can be either <em>fixed</em> or <em>percentage</em></td>
</tr>
<tr>
<td><code class="prettyprint">applicable_on</code> <span class="type">string</span></td>
<td>field on which tax is applicable on, applicable fields are (<em>item.price</em>, )</td>
</tr>
<tr>
<td><code class="prettyprint">value</code> <span class="type">string</span></td>
<td>value of the tax, static value for fixed and percentage for percentage</td>
</tr>
<tr>
<td><code class="prettyprint">item_ref_ids</code> <span class="type">array[string]</span></td>
<td>list of item ref ids for which the tax is applicable</td>
</tr>
</tbody></table>

<h4 id="charges">Charges</h4>

<p>Array of <em>Charge</em> objects.</p>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">ref_id</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The ID of the charge as configured in the PoS/ERP system. If no charge with this reference ID is found in the UrbanPiper system, a new one will be created.</td>
</tr>
<tr>
<td><code class="prettyprint">title</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The title of the charge.<br><em>Optional</em> for updates.</td>
</tr>
<tr>
<td><code class="prettyprint">description</code> <span class="type">string</span></td>
<td>Description of the charge</td>
</tr>
<tr>
<td><code class="prettyprint">active</code> <span class="type">boolean</span></td>
<td>Indicates whether charge is currently active or not</td>
</tr>
<tr>
<td><code class="prettyprint">structure</code> <span class="type">Object</span></td>
<td>defines the structure of the charge</td>
</tr>
<tr>
<td><code class="prettyprint">type</code> <span class="type">string</span></td>
<td>type of charge can be either <em>fixed</em> or <em>percentage</em></td>
</tr>
<tr>
<td><code class="prettyprint">applicable_on</code> <span class="type">string</span></td>
<td>field on which charge is applicable on, applicable fields are (<em>item.quantity</em>, <em>order.order_subtotal</em>)</td>
</tr>
<tr>
<td><code class="prettyprint">value</code> <span class="type">string</span></td>
<td>value of the charge, static value for fixed and percentage for percentage</td>
</tr>
<tr>
<td><code class="prettyprint">item_ref_ids</code> <span class="type">array[string]</span></td>
<td>list of item ref ids for which the charge is applicable</td>
</tr>
<tr>
<td><code class="prettyprint">fulfillment_modes</code> <span class="type">array[string]</span></td>
<td>fulfillment_mode on which the charge is applicable for. applicable values are (<em>delivery</em>, <em>pickup</em>, )</td>
</tr>
<tr>
<td><code class="prettyprint">excluded_platforms</code> <span class="type">array[string]</span></td>
<td>platforms for which the charge to be excluded from</td>
</tr>
</tbody></table>

<h3 id="handling-certain-use-cases">Handling certain use-cases</h3>

<ul>
<li><p><strong>Q. How to disable an <code class="prettyprint">item</code> or <code class="prettyprint">option</code> across all stores in one-shot?</strong><br>
<br>
When you want to disable an <code class="prettyprint">item</code> or <code class="prettyprint">option</code> for <em>all</em> stores, you do not need to make multiple requests for each of the stores with <code class="prettyprint">availability</code> set to <code class="prettyprint">false</code> for each of the <code class="prettyprint">item</code> or <code class="prettyprint">option</code> — instead, you can make a single request for the master catalogue, by setting the <code class="prettyprint">location_ref_id</code> to <code class="prettyprint">-1</code>, with the <em>items</em> and <em>options</em> <code class="prettyprint">availability</code> set to <code class="prettyprint">false</code>. This will remove all <em>item</em> and <em>option</em> associations across all stores in one go.</p></li>
<li><p><strong>Q. I can’t keep track of all the <code class="prettyprint">items</code>/<code class="prettyprint">options</code> that have been removed across the catalogue — can I clear the previous catalogue before adding a new one?</strong><br>
<br>
Sure, it is possible to do so by setting the <code class="prettyprint">flush_items</code> and/or <code class="prettyprint">flush_options</code> attribute to <code class="prettyprint">true</code>.<br>
<strong>NOTE</strong>: This will remove <strong>ALL</strong> the <em>items</em> and <em>options</em> from the catalogue and also clear it from the aggregators and the white-label website and apps.<br>
The UrbanPiper system follows a notion of <em>soft-deleting</em> entries, and as such, the <em>items</em> and <em>options</em> aren’t truly deleted. They are simply marked as inactive. In the new catalogue, if any of the new <em>items</em> or <em>options</em> reference any of the <em>soft-deleted</em> entries, then they’ll be re-activated.</p></li>
<li><p><strong>Q. How to associate a single item with multiple categories?</strong><br>
<br>
While the UrbanPiper system doesn’t explicitly support a single <em>item</em> to be associated with multiple <em>categories</em>, it can easily support this behaviour by employing a simple workaround internally.<br>
By default, the UrbanPiper system supports a 1:1 relationship between <em>items</em> and <em>categories</em>. However, to handle this situation, when an <em>item</em> is associated with multiple <em>categories</em> (using the <code class="prettyprint">category_ref_ids</code> value), the system will internally create duplicate items - one for each <em>category</em> – and assign the same <code class="prettyprint">ref_id</code> to each of the items. This complexity is not exposed at the API level, and you can go ahead and ignore this detail. If however, you ever login to the UrbanPiper dashboard, you will see the duplicate items and knowing about this workaround will be of help.</p></li>
</ul>

<div name="item-actions-api" data-unique="item-actions-api"></div><h2 id="item-actions-api">Item Actions API</h2>
<pre class="highlight shell tab-shell" style="display: block;"><code>curl -X POST <span class="se">\</span>
  https://staging.urbanpiper.com/hub/api/v1/items/ <span class="se">\</span>
  -H <span class="s1">'Authorization: apikey testusername:testapikeys'</span> <span class="se">\</span>
  -H <span class="s1">'Cache-Control: no-cache'</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -d <span class="s1">'{
  "location_ref_id": "105",
  "platforms": ["zomato", "swiggy"],
  "item_ref_ids": ["53", "54"],
  "action": "disable"
}'</span>
</code></pre><pre class="highlight python tab-python" style="display: none;"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">"https://staging.urbanpiper.com/hub/api/v1/items/"</span>

<span class="n">payload</span> <span class="o">=</span> <span class="s">'{"location_ref_id": "105","platforms": ["zomato", "swiggy"],"item_ref_ids": ["53", "54"],"action": "disable"}'</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">"application/json"</span><span class="p">,</span>
    <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">"apikey testusername:testapikeys"</span><span class="p">,</span>
    <span class="s">'Cache-Control'</span><span class="p">:</span> <span class="s">"no-cache"</span>
    <span class="p">}</span>

<span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="s">"POST"</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">payload</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
</code></pre><pre class="highlight javascript tab-javascript" style="display: none;"><code><span class="kd">var</span> <span class="nx">settings</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s2">"async"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="s2">"crossDomain"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="s2">"url"</span><span class="p">:</span> <span class="s2">"https://staging.urbanpiper.com/hub/api/v1/items/"</span><span class="p">,</span>
  <span class="s2">"method"</span><span class="p">:</span> <span class="s2">"POST"</span><span class="p">,</span>
  <span class="s2">"headers"</span><span class="p">:</span> <span class="p">{</span>
    <span class="s2">"Content-Type"</span><span class="p">:</span> <span class="s2">"application/json"</span><span class="p">,</span>
    <span class="s2">"Authorization"</span><span class="p">:</span> <span class="s2">"apikey testusername:testapikeys"</span><span class="p">,</span>
    <span class="s2">"Cache-Control"</span><span class="p">:</span> <span class="s2">"no-cache"</span>
  <span class="p">},</span>
  <span class="s2">"processData"</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="s2">"data"</span><span class="p">:</span> <span class="s1">'{"location_ref_id": "105","platforms": ["zomato", "swiggy"],"item_ref_ids": ["53", "54"],"action": "disable"}'</span>
<span class="p">}</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">(</span><span class="nx">settings</span><span class="p">).</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
<span class="p">});</span>
</code></pre><pre class="highlight java tab-java" style="display: none;"><code><span class="n">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OkHttpClient</span><span class="o">();</span>

<span class="n">MediaType</span> <span class="n">mediaType</span> <span class="o">=</span> <span class="n">MediaType</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"application/json"</span><span class="o">);</span>
<span class="n">RequestBody</span> <span class="n">body</span> <span class="o">=</span> <span class="n">RequestBody</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">mediaType</span><span class="o">,</span> <span class="err">'</span><span class="o">{</span><span class="s">"location_ref_id"</span><span class="o">:</span> <span class="s">"105"</span><span class="o">,</span><span class="s">"platforms"</span><span class="o">:</span> <span class="o">[</span><span class="s">"zomato"</span><span class="o">,</span> <span class="s">"swiggy"</span><span class="o">],</span><span class="s">"item_ref_ids"</span><span class="o">:</span> <span class="o">[</span><span class="s">"53"</span><span class="o">,</span> <span class="s">"54"</span><span class="o">],</span><span class="s">"action"</span><span class="o">:</span> <span class="s">"disable"</span><span class="o">}</span><span class="err">'</span><span class="o">);</span>
<span class="n">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
  <span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="s">"https://staging.urbanpiper.com/hub/api/v1/items/"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="n">body</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Authorization"</span><span class="o">,</span> <span class="s">"apikey testusername:testapikeys"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Cache-Control"</span><span class="o">,</span> <span class="s">"no-cache"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">build</span><span class="o">();</span>

<span class="n">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</code></pre><pre class="highlight php tab-php" style="display: none;"><code><span class="cp">&lt;?php</span>

<span class="nv">$request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">HttpRequest</span><span class="p">();</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setUrl</span><span class="p">(</span><span class="s1">'https://staging.urbanpiper.com/hub/api/v1/items/'</span><span class="p">);</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setMethod</span><span class="p">(</span><span class="nx">HTTP_METH_POST</span><span class="p">);</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setHeaders</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
  <span class="s1">'Cache-Control'</span> <span class="o">=&gt;</span> <span class="s1">'no-cache'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'apikey testusername:testapikeys'</span><span class="p">,</span>
  <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'application/json'</span>
<span class="p">));</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setBody</span><span class="p">(</span><span class="s1">'{
  "location_ref_id": "105",
  "platforms": ["zomato", "swiggy"],
  "item_ref_ids": ["53", "54"],
  "action": "disable"
}'</span><span class="p">);</span>

<span class="k">try</span> <span class="p">{</span>
  <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>

  <span class="k">echo</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">();</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">HttpException</span> <span class="nv">$ex</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$ex</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"success"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Task queued successfully"</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This endpoint allows you to perform specific set of actions for a set of item(s) across different online ordering platform(s). These platforms can be the merchant’s own whitelable ordering platform <em>or</em> any of the aggregator platforms.  </p>

<p>While the UrbanPiper platform allows discrete management of an item’s stock at a particular location, aggregator platforms do not support it. The only option available for aggregator platforms is to either stock-out (disable) or stock-in (enable) an item.</p>

<aside class="warning">
  <header>constraints &amp; expectations</header>

  <p>
    A <em>throttle limit</em> is applicable on this endpoint limiting the maximum number of requests/min to <b>50</b>. If you breach this threshold, the platform will respond with a <code>429</code> error response code and you will not be able to make new requests for a duration of <strong>1 min</strong>.
  </p>
  <p>
    <i>Payload size:</i> no limit as of now.
  </p>
  <p>
  <i>Expected Execution Time:</i> 30 secs to reflect in UrbanPiper platform.  
    <i>Aggregator platform:</i> no time-bound gurantees available as of now.
    </p>
</aside>

<h4 id="http-request">HTTP Request</h4>

<p><span class="request-type get">POST</span><code class="prettyprint">/hub/api/v1/items/</code></p>

<h4 id="request-header">Request header</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">Authorization</code></td>
<td>API key based auth header. Refer <a href="https://api-ordering-docs.urbanpiper.com/#authentication">authentication</a>.</td>
</tr>
</tbody></table>

<h4 id="request-parameters">Request Parameters</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">location_ref_id</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>The unique ID of the store as per the PoS/ERP system.</td>
</tr>
<tr>
<td><code class="prettyprint">platforms</code> <span class="param-required">required</span><span class="type">array[string]</span></td>
<td>List of platforms for which the action has to be performed . Allowed values:<br><code class="prettyprint">urbanpiper</code><br><code class="prettyprint">zomato</code><br><code class="prettyprint">foodpanda</code><br><code class="prettyprint">swiggy</code></td>
</tr>
<tr>
<td><code class="prettyprint">item_ref_ids</code> <span class="param-required">required</span><span class="type">array[string]</span></td>
<td>The IDs (as per the PoS/ERP system) of the items for which action needs to be performed.<br></td>
</tr>
<tr>
<td><code class="prettyprint">action</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>One of the permissible actions:<br><code class="prettyprint">enable</code>: enable/stock-in all the items mentioned in the platforms listed<br><code class="prettyprint">disable</code>: disable/stock-out all the items mentioned in the platforms listed.<br><code class="prettyprint">merge</code>: merge all the items with its location data and push it to mentioned platforms.<br><code class="prettyprint">push</code>: push all the items mentioned to the platforms listed.<br><code class="prettyprint">enable_all</code>: enable all the items and push to the platforms listed.<br><code class="prettyprint">disable_all</code>: disable all the items and push it to the platforms listed.</td>
</tr>
</tbody></table>

<div name="webhooks-api" data-unique="webhooks-api"></div><h2 id="webhooks-api">Webhooks API</h2>
<pre class="highlight shell tab-shell" style="display: block;"><code>curl -X POST <span class="se">\</span>
  https://staging.urbanpiper.com/external/api/v1/webhooks/ <span class="se">\</span>
  -H <span class="s1">'Authorization: apikey testusername:testapikeys'</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -H <span class="s1">'cache-control: no-cache'</span> <span class="se">\</span>
  -d <span class="s1">'{
    "active": true,
    "event_type": "rider_status_update",
    "retrial_interval_units": "seconds",
    "url": "http://example.com/",
    "headers": {
        "content-type": "application/json",
        "x_api_token": "4trgfdsfd243tg54342rewfcef"
    }
}'</span>


curl -X GET <span class="se">\</span>
  https://staging.urbanpiper.com/external/api/v1/webhooks/36 <span class="se">\</span>
  -H <span class="s1">'Authorization: apikey testusername:testapikeys'</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -H <span class="s1">'cache-control: no-cache'</span>
</code></pre><pre class="highlight python tab-python" style="display: none;"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">"https://staging.urbanpiper.com/external/api/v1/webhooks/"</span>

<span class="n">payload</span> <span class="o">=</span> <span class="s">"{</span><span class="se">\n</span><span class="s">    </span><span class="se">\"</span><span class="s">active</span><span class="se">\"</span><span class="s">: true,</span><span class="se">\n</span><span class="s">    </span><span class="se">\"</span><span class="s">event_type</span><span class="se">\"</span><span class="s">: </span><span class="se">\"</span><span class="s">rider_status_update</span><span class="se">\"</span><span class="s">,</span><span class="se">\n</span><span class="s">    </span><span class="se">\"</span><span class="s">retrial_interval_units</span><span class="se">\"</span><span class="s">: </span><span class="se">\"</span><span class="s">seconds</span><span class="se">\"</span><span class="s">,</span><span class="se">\n</span><span class="s">    </span><span class="se">\"</span><span class="s">url</span><span class="se">\"</span><span class="s">: </span><span class="se">\"</span><span class="s">http://example.com/</span><span class="se">\"</span><span class="s">,</span><span class="se">\n</span><span class="s">    </span><span class="se">\"</span><span class="s">headers</span><span class="se">\"</span><span class="s">: {</span><span class="se">\n</span><span class="s">    </span><span class="se">\t\"</span><span class="s">content-type</span><span class="se">\"</span><span class="s">: </span><span class="se">\"</span><span class="s">application/json</span><span class="se">\"</span><span class="s">,</span><span class="se">\n</span><span class="s">    </span><span class="se">\t\"</span><span class="s">x_api_token</span><span class="se">\"</span><span class="s">: </span><span class="se">\"</span><span class="s">4trgfdsfd243tg54342rewfcef</span><span class="se">\"\n</span><span class="s">    }</span><span class="se">\n</span><span class="s">}"</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">"apikey testusername:testapikeys"</span><span class="p">,</span>
    <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">"application/json"</span><span class="p">,</span>
    <span class="s">'cache-control'</span><span class="p">:</span> <span class="s">"no-cache"</span>
    <span class="p">}</span>

<span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="s">"POST"</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">payload</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
</code></pre><pre class="highlight javascript tab-javascript" style="display: none;"><code><span class="kd">var</span> <span class="nx">settings</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s2">"async"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="s2">"crossDomain"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="s2">"url"</span><span class="p">:</span> <span class="s2">"https://staging.urbanpiper.com/external/api/v1/webhooks/"</span><span class="p">,</span>
  <span class="s2">"method"</span><span class="p">:</span> <span class="s2">"POST"</span><span class="p">,</span>
  <span class="s2">"headers"</span><span class="p">:</span> <span class="p">{</span>
    <span class="s2">"Authorization"</span><span class="p">:</span> <span class="s2">"apikey testusername:testapikeys"</span><span class="p">,</span>
    <span class="s2">"Content-Type"</span><span class="p">:</span> <span class="s2">"application/json"</span><span class="p">,</span>
    <span class="s2">"cache-control"</span><span class="p">:</span> <span class="s2">"no-cache"</span>
  <span class="p">},</span>
  <span class="s2">"processData"</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="s2">"data"</span><span class="p">:</span> <span class="s2">"{\n    \"active\": true,\n    \"event_type\": \"rider_status_update\",\n    \"retrial_interval_units\": \"seconds\",\n    \"url\": \"http://example.com/\",\n    \"headers\": {\n    \t\"content-type\": \"application/json\",\n    \t\"x_api_token\": \"4trgfdsfd243tg54342rewfcef\"\n    }\n}"</span>
<span class="p">}</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">(</span><span class="nx">settings</span><span class="p">).</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
<span class="p">});</span>
</code></pre><pre class="highlight java tab-java" style="display: none;"><code><span class="n">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OkHttpClient</span><span class="o">();</span>

<span class="n">MediaType</span> <span class="n">mediaType</span> <span class="o">=</span> <span class="n">MediaType</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"application/json"</span><span class="o">);</span>
<span class="n">RequestBody</span> <span class="n">body</span> <span class="o">=</span> <span class="n">RequestBody</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">mediaType</span><span class="o">,</span> <span class="s">"{\n    \"active\": true,\n    \"event_type\": \"rider_status_update\",\n    \"retrial_interval_units\": \"seconds\",\n    \"url\": \"http://example.com/\",\n    \"headers\": {\n    \t\"content-type\": \"application/json\",\n    \t\"x_api_token\": \"4trgfdsfd243tg54342rewfcef\"\n    }\n}"</span><span class="o">);</span>
<span class="n">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
  <span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="s">"https://staging.urbanpiper.com/external/api/v1/webhooks/"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">post</span><span class="o">(</span><span class="n">body</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Authorization"</span><span class="o">,</span> <span class="s">"apikey testusername:testapikeys"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"cache-control"</span><span class="o">,</span> <span class="s">"no-cache"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">build</span><span class="o">();</span>

<span class="n">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</code></pre><pre class="highlight php tab-php" style="display: none;"><code><span class="cp">&lt;?php</span>

<span class="nv">$request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">HttpRequest</span><span class="p">();</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setUrl</span><span class="p">(</span><span class="s1">'https://staging.urbanpiper.com/external/api/v1/webhooks/'</span><span class="p">);</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setMethod</span><span class="p">(</span><span class="nx">HTTP_METH_POST</span><span class="p">);</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setHeaders</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
  <span class="s1">'cache-control'</span> <span class="o">=&gt;</span> <span class="s1">'no-cache'</span><span class="p">,</span>
  <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'application/json'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'apikey testusername:testapikeys'</span>
<span class="p">));</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setBody</span><span class="p">(</span><span class="s1">'{
    "active": true,
    "event_type": "rider_status_update",
    "retrial_interval_units": "seconds",
    "url": "http://example.com/",
    "headers": {
        "content-type": "application/json",
        "x_api_token": "4trgfdsfd243tg54342rewfcef"
    }
}'</span><span class="p">);</span>

<span class="k">try</span> <span class="p">{</span>
  <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>

  <span class="k">echo</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">();</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">HttpException</span> <span class="nv">$ex</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$ex</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"success"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"webhooks has been successfully created."</span><span class="p">,</span><span class="w">
    </span><span class="s2">"webhook_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">36</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="p">{</span><span class="w">
    </span><span class="s2">"active"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
    </span><span class="s2">"event_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"rider_status_update"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"headers"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"content-type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"application/json"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"x_api_token"</span><span class="p">:</span><span class="w"> </span><span class="s2">"4trgfdsfd243tg54342rewfcef"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="s2">"retrial_interval_units"</span><span class="p">:</span><span class="w"> </span><span class="s2">"seconds"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"url"</span><span class="p">:</span><span class="w"> </span><span class="s2">"http://example.com/"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"webhook_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">36</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This endpoint allows you to create, list, view and update web-hooks for certain set of events.</p>

<aside class="warning">
  <header>constraints &amp; expectations</header>

  <p>
    A <em>throttle limit</em> is applicable on this endpoint limiting the maximum number of requests/min to <b>5</b>. If you breach this threshold, the platform will respond with a <code>429</code> error response code and you will not be able to make new requests for a duration of <strong>1 min</strong>.
  </p>
</aside>

<h4 id="http-request">HTTP Request</h4>

<p><span class="request-type get">GET</span><code class="prettyprint">/external/api/v1/webhooks/</code></p>

<p><span class="request-type get">POST</span><code class="prettyprint">/external/api/v1/webhooks/</code></p>

<p><span class="request-type get">GET</span><code class="prettyprint">/external/api/v1/webhooks/{webhook_id}</code></p>

<p><span class="request-type get">PUT</span><code class="prettyprint">/external/api/v1/webhooks/{webhook_id}</code></p>

<h4 id="request-header">Request header</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">Authorization</code></td>
<td>API key based auth header. Refer <a href="https://api-ordering-docs.urbanpiper.com/#authentication">authentication</a>.</td>
</tr>
</tbody></table>

<h4 id="request-parameters">Request Parameters</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">url</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>url to which the event body to be posted.</td>
</tr>
<tr>
<td><code class="prettyprint">event_type</code> <span class="param-required">required</span><span class="type">string</span></td>
<td>event type to which you are subscribing to. Supported events are :<br><code class="prettyprint">order_placed</code>: order placed event.<br><code class="prettyprint">order_status_update</code>: order state change event.<br><code class="prettyprint">rider_status_update</code>: rider state change event.<br><code class="prettyprint">inventory_update</code>: callback url for inventory update.<br><code class="prettyprint">store_creation</code>: callback url for store creation call.</td>
</tr>
<tr>
<td><code class="prettyprint">headers</code> <span class="type">object</span></td>
<td>custom headers to be included while posting the event body.</td>
</tr>
<tr>
<td><code class="prettyprint">retrial_interval_units</code> <span class="type">string</span></td>
<td>unit based on which retrial is done. allowed values are minutes or seconds (default being minutes). 2^n is the interval in which the retry is done where n being [0-4], first retry happens in 2^0 - 2 seconds/minutes and second on 2^1 - 4 seconds/minute … 2^4 - 32 seconds/minutes</td>
</tr>
<tr>
<td><code class="prettyprint">active</code> <span class="type">boolean</span></td>
<td>webhook is currently active or not.</td>
</tr>
</tbody></table>

          <div name="ordering" data-unique="ordering"></div><h1 id="ordering">Ordering</h1>

<div name="order-status-update" data-unique="order-status-update"></div><h2 id="order-status-update">Order Status Update</h2>
<pre class="highlight shell tab-shell" style="display: block;"><code>curl -X PUT <span class="se">\</span>
  https://staging.urbanpiper.com/external/api/v1/orders/123/status/ <span class="se">\</span>
  -H <span class="s1">'Authorization: apikey testusername:testapikeys'</span> <span class="se">\</span>
  -H <span class="s1">'Cache-Control: no-cache'</span> <span class="se">\</span>
  -H <span class="s1">'Content-Type: application/json'</span> <span class="se">\</span>
  -d <span class="s1">'{
    "new_status": "Dispatched",
    "message": "Order dispatched with rider"
}
'</span>
</code></pre><pre class="highlight python tab-python" style="display: none;"><code><span class="kn">import</span> <span class="nn">requests</span>

<span class="n">url</span> <span class="o">=</span> <span class="s">"https://staging.urbanpiper.com/external/api/v1/orders/123/status/"</span>

<span class="n">payload</span> <span class="o">=</span> <span class="s">"{</span><span class="se">\n\t\"</span><span class="s">new_status</span><span class="se">\"</span><span class="s">: </span><span class="se">\"</span><span class="s">Dispatched</span><span class="se">\"</span><span class="s">,</span><span class="se">\n\t\"</span><span class="s">message</span><span class="se">\"</span><span class="s">: </span><span class="se">\"</span><span class="s">Order dispatched with rider</span><span class="se">\"\n</span><span class="s">}</span><span class="se">\n</span><span class="s">"</span>
<span class="n">headers</span> <span class="o">=</span> <span class="p">{</span>
    <span class="s">'Content-Type'</span><span class="p">:</span> <span class="s">"application/json"</span><span class="p">,</span>
    <span class="s">'Authorization'</span><span class="p">:</span> <span class="s">"apikey testusername:testapikey"</span><span class="p">,</span>
    <span class="s">'Cache-Control'</span><span class="p">:</span> <span class="s">"no-cache"</span>
    <span class="p">}</span>

<span class="n">response</span> <span class="o">=</span> <span class="n">requests</span><span class="o">.</span><span class="n">request</span><span class="p">(</span><span class="s">"PUT"</span><span class="p">,</span> <span class="n">url</span><span class="p">,</span> <span class="n">data</span><span class="o">=</span><span class="n">payload</span><span class="p">,</span> <span class="n">headers</span><span class="o">=</span><span class="n">headers</span><span class="p">)</span>

<span class="k">print</span><span class="p">(</span><span class="n">response</span><span class="o">.</span><span class="n">text</span><span class="p">)</span>
</code></pre><pre class="highlight javascript tab-javascript" style="display: none;"><code><span class="kd">var</span> <span class="nx">settings</span> <span class="o">=</span> <span class="p">{</span>
  <span class="s2">"async"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="s2">"crossDomain"</span><span class="p">:</span> <span class="kc">true</span><span class="p">,</span>
  <span class="s2">"url"</span><span class="p">:</span> <span class="s2">"https://staging.urbanpiper.com/external/api/v1/orders/123/status/"</span><span class="p">,</span>
  <span class="s2">"method"</span><span class="p">:</span> <span class="s2">"PUT"</span><span class="p">,</span>
  <span class="s2">"headers"</span><span class="p">:</span> <span class="p">{</span>
    <span class="s2">"Content-Type"</span><span class="p">:</span> <span class="s2">"application/json"</span><span class="p">,</span>
    <span class="s2">"Authorization"</span><span class="p">:</span> <span class="s2">"apikey testusername:testapikeys"</span><span class="p">,</span>
    <span class="s2">"Cache-Control"</span><span class="p">:</span> <span class="s2">"no-cache"</span>
  <span class="p">},</span>
  <span class="s2">"processData"</span><span class="p">:</span> <span class="kc">false</span><span class="p">,</span>
  <span class="s2">"data"</span><span class="p">:</span> <span class="s2">"{\n\t\"new_status\": \"Dispatched\",\n\t\"message\": \"Order dispatched with rider\"\n}\n"</span>
<span class="p">}</span>

<span class="nx">$</span><span class="p">.</span><span class="nx">ajax</span><span class="p">(</span><span class="nx">settings</span><span class="p">).</span><span class="nx">done</span><span class="p">(</span><span class="kd">function</span> <span class="p">(</span><span class="nx">response</span><span class="p">)</span> <span class="p">{</span>
  <span class="nx">console</span><span class="p">.</span><span class="nx">log</span><span class="p">(</span><span class="nx">response</span><span class="p">);</span>
<span class="p">});</span>
</code></pre><pre class="highlight java tab-java" style="display: none;"><code><span class="n">OkHttpClient</span> <span class="n">client</span> <span class="o">=</span> <span class="k">new</span> <span class="n">OkHttpClient</span><span class="o">();</span>

<span class="n">MediaType</span> <span class="n">mediaType</span> <span class="o">=</span> <span class="n">MediaType</span><span class="o">.</span><span class="na">parse</span><span class="o">(</span><span class="s">"application/json"</span><span class="o">);</span>
<span class="n">RequestBody</span> <span class="n">body</span> <span class="o">=</span> <span class="n">RequestBody</span><span class="o">.</span><span class="na">create</span><span class="o">(</span><span class="n">mediaType</span><span class="o">,</span> <span class="s">"{\n\t\"new_status\": \"Dispatched\",\n\t\"message\": \"Order dispatched with rider\"\n}\n"</span><span class="o">);</span>
<span class="n">Request</span> <span class="n">request</span> <span class="o">=</span> <span class="k">new</span> <span class="n">Request</span><span class="o">.</span><span class="na">Builder</span><span class="o">()</span>
  <span class="o">.</span><span class="na">url</span><span class="o">(</span><span class="s">"https://staging.urbanpiper.com/external/api/v1/orders/123/status/"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">put</span><span class="o">(</span><span class="n">body</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Content-Type"</span><span class="o">,</span> <span class="s">"application/json"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Authorization"</span><span class="o">,</span> <span class="s">"apikey testusername:testapikeys"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">addHeader</span><span class="o">(</span><span class="s">"Cache-Control"</span><span class="o">,</span> <span class="s">"no-cache"</span><span class="o">)</span>
  <span class="o">.</span><span class="na">build</span><span class="o">();</span>

<span class="n">Response</span> <span class="n">response</span> <span class="o">=</span> <span class="n">client</span><span class="o">.</span><span class="na">newCall</span><span class="o">(</span><span class="n">request</span><span class="o">).</span><span class="na">execute</span><span class="o">();</span>
</code></pre><pre class="highlight php tab-php" style="display: none;"><code><span class="cp">&lt;?php</span>

<span class="nv">$request</span> <span class="o">=</span> <span class="k">new</span> <span class="nx">HttpRequest</span><span class="p">();</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setUrl</span><span class="p">(</span><span class="s1">'http://staging.urbanpiper.com/external/api/v1/orders/123/status/'</span><span class="p">);</span>
<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setMethod</span><span class="p">(</span><span class="nx">HTTP_METH_PUT</span><span class="p">);</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setHeaders</span><span class="p">(</span><span class="k">array</span><span class="p">(</span>
  <span class="s1">'Cache-Control'</span> <span class="o">=&gt;</span> <span class="s1">'no-cache'</span><span class="p">,</span>
  <span class="s1">'Authorization'</span> <span class="o">=&gt;</span> <span class="s1">'ApiKey testusername:testapikeys'</span><span class="p">,</span>
  <span class="s1">'Content-Type'</span> <span class="o">=&gt;</span> <span class="s1">'application/json'</span>
<span class="p">));</span>

<span class="nv">$request</span><span class="o">-&gt;</span><span class="na">setBody</span><span class="p">(</span><span class="s1">'{
    "new_status": "Dispatched",
    "message": "Order dispatched with rider"
}
'</span><span class="p">);</span>

<span class="k">try</span> <span class="p">{</span>
  <span class="nv">$response</span> <span class="o">=</span> <span class="nv">$request</span><span class="o">-&gt;</span><span class="na">send</span><span class="p">();</span>

  <span class="k">echo</span> <span class="nv">$response</span><span class="o">-&gt;</span><span class="na">getBody</span><span class="p">();</span>
<span class="p">}</span> <span class="k">catch</span> <span class="p">(</span><span class="nx">HttpException</span> <span class="nv">$ex</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">echo</span> <span class="nv">$ex</span><span class="p">;</span>
<span class="p">}</span>
</code></pre>
<blockquote>
<p>The above command returns JSON structured like this:</p>
</blockquote>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"success"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Order state updated successfully."</span><span class="w">
</span><span class="p">}</span><span class="w">

</span><span class="err">note</span><span class="p">:</span><span class="w"> </span><span class="err">Error</span><span class="w"> </span><span class="err">response</span><span class="w"> </span><span class="err">on</span><span class="w"> </span><span class="err">trying</span><span class="w"> </span><span class="err">to</span><span class="w"> </span><span class="err">cancel</span><span class="w"> </span><span class="err">swiggy</span><span class="w"> </span><span class="err">order</span><span class="w">

</span><span class="p">{</span><span class="w">
  </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"error"</span><span class="p">,</span><span class="w">
  </span><span class="s2">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Cancellation of Swiggy orders is not allowed. Callback requested instead."</span><span class="p">,</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This endpoint processes a status update for an order which has been placed before. If the credentials are that for a store(s), only orders for that store(s) can be updated.</p>

<p>Note: For swiggy orders, cancellation is not allowed through API, instead request for callback is made.
When cancellation request is received for swiggy order, we hit swiggy’s request for callback endpoint thereby swiggy merchant support team will call the store to discuss on the order. If edit is possible swiggy edits the order and sends us otherwise swiggy cancels the order. However the endpoint returns 400 as cancellation is not on request directly</p>

<h4 id="http-request">HTTP Request</h4>

<p><span class="request-type get">PUT</span> <code class="prettyprint">/external/api/v1/orders/:id/status/</code></p>

<p>where :id is order reference as per our system</p>

<h4 id="request-header">Request header</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">Authorization</code></td>
<td>API key based auth header. Refer <a href="https://api-ordering-docs.urbanpiper.com/#authentication">authentication</a>.</td>
</tr>
</tbody></table>

<h4 id="request-parameters">Request Parameters</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">new_status</code></td>
<td>status to which the order needs to be changed</td>
</tr>
<tr>
<td><code class="prettyprint">message</code><span class="param-optional">optional</span></td>
<td>custom message for the status change</td>
</tr>
</tbody></table>

          <div name="webhooks" data-unique="webhooks"></div><h1 id="webhooks">Webhooks</h1>

<p>The UrbanPiper platform relies on a system of webhooks to handle 2 kind of scenarios:  </p>

<ul>
<li>Respond to requests which can potentially take a long time to process and are thus, handled asynchronously.<br></li>
<li>Notify an external system when a particular <em>event</em> occurs.</li>
</ul>

<aside class="info">
Webhook callbacks will only be issued if they have been configured in the <b>Quint</b> portal. Please check on it before relying on them for your workflows.
</aside>

<h3 id="event-type">Event Type</h3>

<p>Every webhook corresponds to a particular <em>event</em>. As such, the outbound request associated with every webhook has a header value — <code class="prettyprint">X-UPR-Event-Type</code> — that can be used to identify the associated <em>event type</em>. The value for this header is set to a unique value that identifies the <em>event</em>. At present, the following <em>event types</em> can configured to trigger a webhook callback:</p>

<table><thead>
<tr>
<th>Event Type</th>
<th>Unique Code</th>
</tr>
</thead><tbody>
<tr>
<td>User feedback</td>
<td><code class="prettyprint">10005</code></td>
</tr>
<tr>
<td>Order placed</td>
<td><code class="prettyprint">18</code></td>
</tr>
<tr>
<td>Order status update</td>
<td><code class="prettyprint">60008</code></td>
</tr>
<tr>
<td>Order delivery status update</td>
<td><code class="prettyprint">60012</code></td>
</tr>
<tr>
<td>Catalogue Create/Update through API</td>
<td><code class="prettyprint">60013</code></td>
</tr>
<tr>
<td>Store Create/Update through API</td>
<td><code class="prettyprint">60014</code></td>
</tr>
<tr>
<td>Store Actions through API</td>
<td><code class="prettyprint">60015</code></td>
</tr>
</tbody></table>

<div name="store-configuration-callback" data-unique="store-configuration-callback"></div><h2 id="store-configuration-callback">Store Configuration callback</h2>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"reference"</span><span class="p">:</span><span class="w"> </span><span class="s2">"48e262cdcca04a07b4ef3a6914a23cbe"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"stats"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"updated"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
        </span><span class="s2">"errors"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
        </span><span class="s2">"created"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="s2">"stores"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"A"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">3922</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"U"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">3923</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This webhook callback is triggered when a request to <a href="https://api-ordering-docs.urbanpiper.com/#adding-updating-stores">create/update stores</a> is made. Since, this endpoint supports handling of store related information in <em>bulk</em>, all its related processing is done asynchronously. When the request is made, the platform does a quick validation of the payload and responds with a unique <code class="prettyprint">reference</code> value to identify the request. After that, the payload is added to a queue from where backround processes start work on it <em>asynchronously</em>.</p>

<p>Once the entire payload has been processed, a response (as shown on the right) will be issued to the callback URL. The structure of the payload is nearly identical to the request payload that is sent, except for the following 2 additions:  </p>

<ul>
<li>a <code class="prettyprint">stats</code> object is added at the root level which provides a summary of the outcome of processing the entire payload.<br></li>
<li>every store object that was passed in contains a dictionary block — <code class="prettyprint">upipr_status</code> — which contains relevant information about the outcome of processing the particular store object.</li>
</ul>

<h3 id="webhook-payload">Webhook Payload</h3>

<p><code class="prettyprint">reference</code> — this is the same unique value that was returned in the response to the request that triggered the bulk store processing flow.</p>

<h4 id="stats-object"><code class="prettyprint">stats</code> object</h4>

<p>Present at the root structure of the response JSON payload.</p>

<table><thead>
<tr>
<th>Attribute</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">updated</code> <span class="type">integer</span></td>
<td>The number of store objects that <em>existed</em> from before and got updated.</td>
</tr>
<tr>
<td><code class="prettyprint">errors</code> <span class="type">integer</span></td>
<td>Number of store objects that could not be processed due to an error.</td>
</tr>
<tr>
<td><code class="prettyprint">created</code> <span class="type">integer</span></td>
<td>Number of store objects that weren’t present before and a <em>new</em> store was created.</td>
</tr>
</tbody></table>

<h4 id="upipr_status-object"><code class="prettyprint">upipr_status</code> object</h4>

<p>Present within each store object that was passed in.</p>

<table><thead>
<tr>
<th>Attribute</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">id</code> <span class="type">integer</span></td>
<td>The ID of the store created in the UrbanPiper platform. Will not be present if an error was encountered while processing the particular object.</td>
</tr>
<tr>
<td><code class="prettyprint">action</code> <span class="type">string</span></td>
<td>Indicates the result of processing this object. Can be one of:<br><code class="prettyprint">A</code>: new store <em>added</em>.<br><code class="prettyprint">U</code>: existing store <em>updated</em>.</td>
</tr>
<tr>
<td><code class="prettyprint">error</code> <span class="type">boolean</span></td>
<td>Will be set to <code class="prettyprint">true</code> if an error occurred while processing the particular store object.</td>
</tr>
<tr>
<td><code class="prettyprint">err_msg</code> <span class="type">string</span></td>
<td>An explanatory message describing the nature of the error, if any occurred. Not present if there was no error.</td>
</tr>
</tbody></table>

<div name="catalogue-configuration-callback" data-unique="catalogue-configuration-callback"></div><h2 id="catalogue-configuration-callback">Catalogue configuration callback</h2>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"reference"</span><span class="p">:</span><span class="w"> </span><span class="s2">"121e22cdcca04a07b4ef3a6914a12cbe"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"stats"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"categories"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="s2">"updated"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"errors"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"created"</span><span class="p">:</span><span class="w"> </span><span class="mi">8</span><span class="p">,</span><span class="w">
            </span><span class="s2">"deleted"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="s2">"items"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="s2">"updated"</span><span class="p">:</span><span class="w"> </span><span class="mi">11</span><span class="p">,</span><span class="w">
            </span><span class="s2">"errors"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"created"</span><span class="p">:</span><span class="w"> </span><span class="mi">21</span><span class="p">,</span><span class="w">
            </span><span class="s2">"deleted"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="s2">"option_groups"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="s2">"updated"</span><span class="p">:</span><span class="w"> </span><span class="mi">3</span><span class="p">,</span><span class="w">
            </span><span class="s2">"errors"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"created"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
            </span><span class="s2">"deleted"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="s2">"options"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="s2">"updated"</span><span class="p">:</span><span class="w"> </span><span class="mi">12</span><span class="p">,</span><span class="w">
            </span><span class="s2">"errors"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
            </span><span class="s2">"created"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
            </span><span class="s2">"deleted"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="s2">"categories"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"A"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">45435</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"U"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">3423</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="s2">"items"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"A"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">565</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"U"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">6565</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"D"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">658</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="s2">"option_groups"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"A"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">7687</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"U"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">6787</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="s2">"options"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"A"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">46554</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"U"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">45646</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="p">{</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="err">...</span><span class="p">,</span><span class="w">
            </span><span class="s2">"upipr_status"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"D"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">456</span><span class="p">,</span><span class="w">
                </span><span class="s2">"error"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">]</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<p>This webhook callback is triggered when a request to the <a href="https://api-ordering-docs.urbanpiper.com/#managing-catalogue">catalogue management</a> API endpoint is made. Since, this endpoint supports handling of catalogue related information in <em>bulk</em>, all its related processing is done asynchronously. When the request is made, the platform does a quick validation of the payload and responds with a unique <code class="prettyprint">reference</code> value to identify the request. After that, the payload is added to a queue from where backround processes start work on it <em>asynchronously</em>.</p>

<p>Once the entire payload has been processed, a response (as shown on the right) will be issued to the callback URL. The structure of the payload is nearly identical to the request payload that is sent, except for the following 2 additions:  </p>

<ul>
<li>a <code class="prettyprint">stats</code> object is added at the root level which provides a summary of the outcome of processing each of the catalogue sections that were passed in - <em>categories</em>, <em>items</em>, <em>option_groups, _options</em>.<br></li>
<li>for each object of a catalogue section like <em>category</em>, <em>item</em>, etc — a <code class="prettyprint">upipr_status</code> object will be provided. This object contains the unique <em>ID</em> of the object in the UrbanPiper system (if the object was processed without problems). If there was an error processing the object, the reason for the error will be provided in this object.</li>
</ul>

<h3 id="webhook-payload">Webhook Payload</h3>

<p><code class="prettyprint">reference</code> — this is the same unique value that was returned in the response to the request that triggered the bulk store processing flow.</p>

<h4 id="stats-object"><code class="prettyprint">stats</code> object</h4>

<p>Present at the root structure of the response JSON payload.</p>

<table><thead>
<tr>
<th>Attribute</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">updated</code> <span class="type">integer</span></td>
<td>The number of catalogue objects that <em>existed</em> from before and got updated.</td>
</tr>
<tr>
<td><code class="prettyprint">errors</code> <span class="type">integer</span></td>
<td>Number of catalogue objects that could not be processed due to an error.</td>
</tr>
<tr>
<td><code class="prettyprint">created</code> <span class="type">integer</span></td>
<td>Number of catalogue objects that weren’t present before and a <em>new</em> catalogue was created.</td>
</tr>
<tr>
<td><code class="prettyprint">deleted</code> <span class="type">integer</span></td>
<td>Number of catalogue objects that <em>existed</em> from before and got removed from store.</td>
</tr>
</tbody></table>

<h4 id="upipr_status-object"><code class="prettyprint">upipr_status</code> object</h4>

<p>Present within each store object that was passed in.</p>

<table><thead>
<tr>
<th>Attribute</th>
<th>Value</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">id</code> <span class="type">integer</span></td>
<td>The ID of the catalogue created in the UrbanPiper platform. Will not be present if an error was encountered while processing the particular object.</td>
</tr>
<tr>
<td><code class="prettyprint">action</code> <span class="type">string</span></td>
<td>Indicates the result of processing this object. Can be one of:<br><code class="prettyprint">A</code>: new catalogue <em>added</em>.<br><code class="prettyprint">U</code>: existing catalogue <em>updated</em>.<br><code class="prettyprint">D</code>: existing catalogue <em>removed</em>.</td>
</tr>
<tr>
<td><code class="prettyprint">error</code> <span class="type">boolean</span></td>
<td>Will be set to <code class="prettyprint">true</code> if an error occurred while processing the particular catalogue object.</td>
</tr>
<tr>
<td><code class="prettyprint">err_msg</code> <span class="type">string</span></td>
<td>An explanatory message describing the nature of the error, if any occurred. Not present if there was no error.</td>
</tr>
</tbody></table>

<div name="order-relay" data-unique="order-relay"></div><h2 id="order-relay">Order Relay</h2>

<p>External systems can be configured such that when an order is received on the UrbanPiper platform, a real-time event will trigger a webhook, which in-turn will make a POST request to the external system.</p>

<p>The request data will be sent in the body of the request and the format will be JSON. Below is a sample of the JSON data and a detailed explanation of the attributes (explained further below)</p>

<p>NOTE: It is expected that the API endpoint to which this webhook makes a request returns a status code in the 2xx series. Otherwise, the platform will mark the delivery as failed and retry later (based on the configured retrial scheme)</p>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"customer"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"address"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="s2">"city"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Delhi NCR"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"is_guest_mode"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="p">,</span><span class="w">
            </span><span class="s2">"line_1"</span><span class="p">:</span><span class="w"> </span><span class="s2">"line 1"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"line_2"</span><span class="p">:</span><span class="w"> </span><span class="s2">"line 2"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"landmark"</span><span class="p">:</span><span class="w"> </span><span class="s2">"landmark"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"latitude"</span><span class="p">:</span><span class="w"> </span><span class="mf">13.05339</span><span class="p">,</span><span class="w">
            </span><span class="s2">"longitude"</span><span class="p">:</span><span class="w"> </span><span class="mf">80.24940</span><span class="p">,</span><span class="w">
            </span><span class="s2">"sub_locality"</span><span class="p">:</span><span class="w"> </span><span class="s2">"HSR Layout"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"pin"</span><span class="p">:</span><span class="w"> </span><span class="s2">"221005"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"tag"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Home"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="s2">"email"</span><span class="p">:</span><span class="w"> </span><span class="s2">"testuser@example.com"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"testuser"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"phone"</span><span class="p">:</span><span class="w"> </span><span class="s2">"9999999999"</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="s2">"order"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"details"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="s2">"channel"</span><span class="p">:</span><span class="w"> </span><span class="s2">"zomato"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"charges"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="p">{</span><span class="w">
                    </span><span class="s2">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Delivery Charge"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="mf">44.0</span><span class="w">
                </span><span class="p">},</span><span class="w">
                </span><span class="p">{</span><span class="w">
                    </span><span class="s2">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Packaging Charge"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="mf">55.0</span><span class="w">
                </span><span class="p">}</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="s2">"coupon"</span><span class="p">:</span><span class="w"> </span><span class="s2">"FLAT55"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"created"</span><span class="p">:</span><span class="w"> </span><span class="mi">1524666683480</span><span class="p">,</span><span class="w">
            </span><span class="s2">"delivery_datetime"</span><span class="p">:</span><span class="w"> </span><span class="mi">1524669383480</span><span class="p">,</span><span class="w">
            </span><span class="s2">"discount"</span><span class="p">:</span><span class="w"> </span><span class="mf">100.0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"total_external_discount"</span><span class="p">:</span><span class="w"> </span><span class="mf">27.0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"ext_platforms"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="p">{</span><span class="w">
                    </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1218004251"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"kind"</span><span class="p">:</span><span class="w"> </span><span class="s2">"food_aggregator"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"zomato"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"delivery_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"partner"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"extras"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
                      </span><span class="s2">"order_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"pop"</span><span class="p">,</span><span class="w">
                      </span><span class="s2">"thirty_minutes_delivery"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
                      </span><span class="s2">"cash_to_be_collected"</span><span class="p">:</span><span class="w"> </span><span class="mf">234.50</span><span class="w">
                    </span><span class="p">},</span><span class="w">
                    </span><span class="s2">"discounts"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                        </span><span class="p">{</span><span class="w">
                            </span><span class="s2">"is_merchant_discount"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="p">,</span><span class="w">
                            </span><span class="s2">"rate"</span><span class="p">:</span><span class="w"> </span><span class="mf">40.0</span><span class="p">,</span><span class="w">
                            </span><span class="s2">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Restaurant Promo"</span><span class="p">,</span><span class="w">
                            </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="mf">64.4</span><span class="p">,</span><span class="w">
                            </span><span class="s2">"code"</span><span class="p">:</span><span class="w"> </span><span class="s2">"FLAT40"</span><span class="w">
                        </span><span class="p">}</span><span class="w">
                    </span><span class="p">]</span><span class="w">
                </span><span class="p">}</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">3444567</span><span class="p">,</span><span class="w">
            </span><span class="s2">"instructions"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Address Instructions: test"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"item_level_total_charges"</span><span class="p">:</span><span class="w"> </span><span class="mf">10.0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"item_level_total_taxes"</span><span class="p">:</span><span class="w"> </span><span class="mf">40.0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"item_taxes"</span><span class="p">:</span><span class="w"> </span><span class="mf">0.0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"merchant_ref_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">1218004251</span><span class="p">,</span><span class="w">
            </span><span class="s2">"order_level_total_charges"</span><span class="p">:</span><span class="w"> </span><span class="mi">99</span><span class="p">,</span><span class="w">
            </span><span class="s2">"order_level_total_taxes"</span><span class="p">:</span><span class="w"> </span><span class="mi">0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"order_state"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Placed"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"order_subtotal"</span><span class="p">:</span><span class="w"> </span><span class="mf">800.0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"order_total"</span><span class="p">:</span><span class="w"> </span><span class="mf">939.0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"order_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"delivery"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"state"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Placed"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"taxes"</span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
            </span><span class="s2">"total_charges"</span><span class="p">:</span><span class="w"> </span><span class="mf">99.0</span><span class="p">,</span><span class="w">
            </span><span class="s2">"total_taxes"</span><span class="p">:</span><span class="w"> </span><span class="mf">40.0</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="s2">"items"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="s2">"charges"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                  </span><span class="p">{</span><span class="w">
                    </span><span class="s2">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Packaging Charge"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="mf">10.0</span><span class="w">
                </span><span class="p">}</span><span class="w">
              </span><span class="p">],</span><span class="w">
                </span><span class="s2">"discount"</span><span class="p">:</span><span class="w"> </span><span class="mf">100.0</span><span class="p">,</span><span class="w">
                </span><span class="s2">"food_type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"2"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">46898</span><span class="p">,</span><span class="w">
                </span><span class="s2">"image_landscape_url"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
                </span><span class="s2">"image_url"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
                </span><span class="s2">"merchant_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"-1"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"options_to_add"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                    </span><span class="p">{</span><span class="w">
                        </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">11262</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"merchant_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"394"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"price"</span><span class="p">:</span><span class="w"> </span><span class="mf">200.0</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Small"</span><span class="w">
                    </span><span class="p">},</span><span class="w">
                    </span><span class="p">{</span><span class="w">
                        </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">11263</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"merchant_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"295"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"price"</span><span class="p">:</span><span class="w"> </span><span class="mf">400.0</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"large"</span><span class="w">
                    </span><span class="p">}</span><span class="w">
                </span><span class="p">],</span><span class="w">
                </span><span class="s2">"options_to_remove"</span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
                </span><span class="s2">"price"</span><span class="p">:</span><span class="w"> </span><span class="mf">0.0</span><span class="p">,</span><span class="w">
                </span><span class="s2">"quantity"</span><span class="p">:</span><span class="w"> </span><span class="mi">1</span><span class="p">,</span><span class="w">
                </span><span class="s2">"taxes"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                    </span><span class="p">{</span><span class="w">
                        </span><span class="s2">"rate"</span><span class="p">:</span><span class="w"> </span><span class="mf">5.0</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"5% GST"</span><span class="p">,</span><span class="w">
                        </span><span class="s2">"value"</span><span class="p">:</span><span class="w"> </span><span class="mf">40.0</span><span class="w">
                    </span><span class="p">}</span><span class="w">
                </span><span class="p">],</span><span class="w">
                </span><span class="s2">"title"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Kadai Singh"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"total"</span><span class="p">:</span><span class="w"> </span><span class="mf">800.0</span><span class="p">,</span><span class="w">
                </span><span class="s2">"total_with_tax"</span><span class="p">:</span><span class="w"> </span><span class="mf">840.0</span><span class="p">,</span><span class="w">
                </span><span class="s2">"unit_weight"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">],</span><span class="w">
        </span><span class="s2">"next_state"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Acknowledged"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"next_states"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="s2">"Acknowledged"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"Confirmed"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"Food Ready"</span><span class="w">
            </span><span class="s2">"Dispatched"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"Modified"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"Completed"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"Cancelled"</span><span class="w">
        </span><span class="p">],</span><span class="w">
        </span><span class="s2">"payment"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="s2">"amount"</span><span class="p">:</span><span class="w"> </span><span class="mf">939.0</span><span class="p">,</span><span class="w">
                </span><span class="s2">"option"</span><span class="p">:</span><span class="w"> </span><span class="s2">"cash"</span><span class="p">,</span><span class="w">
                </span><span class="s2">"srvr_trx_id"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="s2">"amount"</span><span class="p">:</span><span class="w"> </span><span class="mf">5.0</span><span class="p">,</span><span class="w">
                </span><span class="s2">"option"</span><span class="p">:</span><span class="w"> </span><span class="s2">"wallet_credit"</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">],</span><span class="w">
        </span><span class="s2">"store"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="s2">"address"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Sector 7,HSR Layout"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"id"</span><span class="p">:</span><span class="w"> </span><span class="mi">1712</span><span class="p">,</span><span class="w">
            </span><span class="s2">"latitude"</span><span class="p">:</span><span class="w"> </span><span class="mf">12.908136</span><span class="p">,</span><span class="w">
            </span><span class="s2">"longitude"</span><span class="p">:</span><span class="w"> </span><span class="mf">77.647608</span><span class="p">,</span><span class="w">
            </span><span class="s2">"merchant_ref_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"HSR Layout"</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">}</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<h4 id="customer-attributes">Customer Attributes</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">customer</code> <span class="type">object</span></td>
<td>Customer data.</td>
</tr>
<tr>
<td><code class="prettyprint">phone</code> <span class="type">string</span></td>
<td>Customer phone number.</td>
</tr>
<tr>
<td><code class="prettyprint">email</code> <span class="type">string</span></td>
<td>Customer email. Can be empty, if the customer signed-up at the store.</td>
</tr>
<tr>
<td><code class="prettyprint">name</code>  <span class="type">string</span></td>
<td>Customer name. Can be empty, if the customer signed-up at the store.</td>
</tr>
<tr>
<td><code class="prettyprint">address</code> <span class="type">object</span></td>
<td>Customer address object.</td>
</tr>
<tr>
<td><code class="prettyprint">city</code> <span class="type">string</span></td>
<td>Address city. Can be empty.</td>
</tr>
<tr>
<td><code class="prettyprint">pin</code> <span class="type">string</span></td>
<td>Postal code. Can be empty.</td>
</tr>
<tr>
<td><code class="prettyprint">latitude</code> <span class="type">double</span></td>
<td>Geo-location latitude.</td>
</tr>
<tr>
<td><code class="prettyprint">longitude</code> <span class="type">double</span></td>
<td>Geo-location longitude.</td>
</tr>
<tr>
<td><code class="prettyprint">line_1</code> <span class="type">string</span></td>
<td>Address line 1.</td>
</tr>
<tr>
<td><code class="prettyprint">line_2</code> <span class="type">string</span></td>
<td>Address line 2.</td>
</tr>
<tr>
<td><code class="prettyprint">landmark</code> <span class="type">string</span></td>
<td>Address line 2. Can be empty.</td>
</tr>
<tr>
<td><code class="prettyprint">sub_locality</code> <span class="type">string</span></td>
<td>Sub-locality of the address. This is typically retrieved through Google Places search and can’t be edited by the customer.</td>
</tr>
</tbody></table>

<h4 id="order-attributes">Order Attributes</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">order</code> <span class="type">object</span></td>
<td>Order data object.</td>
</tr>
<tr>
<td><code class="prettyprint">next_state</code><span class="type">string</span></td>
<td>Next state expected as per the flow</td>
</tr>
<tr>
<td><code class="prettyprint">next_states</code><span class="type">array[string]</span></td>
<td>Possible next states for the order.</td>
</tr>
</tbody></table>

<h4 id="order-details-attributes">Order details Attributes</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">details</code> <span class="type">object</span></td>
<td>Data object containing order level information.</td>
</tr>
<tr>
<td><code class="prettyprint">merchant_ref_id</code><span class="type">string</span></td>
<td>The ID for the order in the merchant’s system (PoS/ERP). If this webhook is being</td>
</tr>
<tr>
<td><code class="prettyprint">created</code><span class="type">integer</span></td>
<td>The Unix timestamp (in milliseconds) for the time at which the order was received.</td>
</tr>
<tr>
<td><code class="prettyprint">order_state</code><span class="type">string</span></td>
<td>The current state of the order within the our system</td>
</tr>
<tr>
<td><code class="prettyprint">order_subtotal</code><span class="type">float</span></td>
<td>The sum of all the items (x quantity), excluding taxes.</td>
</tr>
<tr>
<td><code class="prettyprint">item_level_total_taxes</code><span class="type">float</span></td>
<td>Sum of all item level taxes applied.</td>
</tr>
<tr>
<td><code class="prettyprint">item_level_total_charges</code><span class="type">float</span></td>
<td>Sum of all item level charges applied.</td>
</tr>
<tr>
<td><code class="prettyprint">order_level_total_taxes</code><span class="type">float</span></td>
<td>Sum of all order level taxes applied.</td>
</tr>
<tr>
<td><code class="prettyprint">order_level_total_charges</code><span class="type">float</span></td>
<td>Sum of all order level charges applied.</td>
</tr>
<tr>
<td><code class="prettyprint">total_charges</code><span class="type">float</span></td>
<td>Sum of all item and order level charges applied.</td>
</tr>
<tr>
<td><code class="prettyprint">total_taxes</code><span class="type">float</span></td>
<td>Sum of all item and order level taxes applied.</td>
</tr>
<tr>
<td><code class="prettyprint">order_total</code><span class="type">float</span></td>
<td>The total value of the order. consumed by the backend system, this value would be null.</td>
</tr>
<tr>
<td><code class="prettyprint">order_type</code><span class="type">float</span></td>
<td>Indicates whether this order is meant for delivery or takeaway.</td>
</tr>
<tr>
<td><code class="prettyprint">channel</code><span class="type">string</span></td>
<td>The channel used by the customer to place the order. Can be one of: web, app_android, app_ios, satellite, zomato, foodpanda, swiggy, ubereats. The values in this list might change depending on future integrations.</td>
</tr>
<tr>
<td><code class="prettyprint">coupon</code> <span class="type">string</span></td>
<td>The text of the coupon code that’s been applied. Can be empty.</td>
</tr>
<tr>
<td><code class="prettyprint">discount</code> <span class="type">float</span></td>
<td>The total discount amount applied on the order.</td>
</tr>
<tr>
<td><code class="prettyprint">total_external_discount</code> <span class="type">float</span></td>
<td>The total external discount amount applied on the order. <code class="prettyprint">discount</code> key is inclusive of <code class="prettyprint">total_external_discount</code>. <code class="prettyprint">total_external_discount</code> is used during reconciliation. <code class="prettyprint">order_total</code> + <code class="prettyprint">total_external_discount</code> is total payable for merchant(applicable on external orders)</td>
</tr>
<tr>
<td><code class="prettyprint">delivery_datetime</code><span class="type">integer</span></td>
<td>The Unix timestamp (in milliseconds) for the expected time of delivery.</td>
</tr>
<tr>
<td><code class="prettyprint">instructions</code> <span class="type">string</span></td>
<td>Any order specific instructions provided by the customer.</td>
</tr>
<tr>
<td><code class="prettyprint">charges</code> <span class="type">array[object]</span></td>
<td>A list of charges applicable at the order level.</td>
</tr>
<tr>
<td><code class="prettyprint">value</code> <span class="type">float</span></td>
<td>The charge amount applied.</td>
</tr>
<tr>
<td><code class="prettyprint">title</code> <span class="type">string</span></td>
<td>The title for the charge.</td>
</tr>
<tr>
<td><code class="prettyprint">ext_platforms</code><span class="type">object</span></td>
<td>Information about the external platforms (zomato, swiggy…) linked to the order.</td>
</tr>
<tr>
<td><code class="prettyprint">id</code><span class="type">integer</span></td>
<td>Reference ID of the platform as per the UrbanPiper system.</td>
</tr>
<tr>
<td><code class="prettyprint">kind</code><span class="type">string</span></td>
<td>The type of external platform. Can be one of <code class="prettyprint">food_aggregator</code> or <code class="prettyprint">delivery_partner</code>.</td>
</tr>
<tr>
<td><code class="prettyprint">name</code> <span class="type">string</span></td>
<td>Name of the platform.</td>
</tr>
<tr>
<td><code class="prettyprint">delivery_type</code> <span class="type">string</span></td>
<td>The type of delivery required for the order. Can be one of:<br><code class="prettyprint">self</code>: if self-delivered by merchant<br><code class="prettyprint">partner</code>: if aggregator will deliver<br><code class="prettyprint">pickup</code>: if customer will pickup.</td>
</tr>
<tr>
<td><code class="prettyprint">discounts</code> <span class="type">array[object]</span></td>
<td>list of discounts applied on the order.</td>
</tr>
<tr>
<td><code class="prettyprint">is_merchant_discount</code> <span class="type">boolean</span></td>
<td>is the discount sponsored by merchant or not. If it is sponsored by external platform(zomato) it will be false.</td>
</tr>
<tr>
<td><code class="prettyprint">rate</code> <span class="type">float</span></td>
<td>Rate at which the discount applied if percentage discount, will be null if fixed discount.</td>
</tr>
<tr>
<td><code class="prettyprint">title</code> <span class="type">string</span></td>
<td>The title for the discount.</td>
</tr>
<tr>
<td><code class="prettyprint">value</code> <span class="type">float</span></td>
<td>The discount amount applied.</td>
</tr>
</tbody></table>

<h4 id="payment-attributes">Payment Attributes</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">payment</code> <span class="type">array[object]</span></td>
<td>A list of payment objects. A customer can use more than one mode of payment to pay for an order.</td>
</tr>
<tr>
<td><code class="prettyprint">amount</code> <span class="type">float</span></td>
<td>Amount paid through given payment option.</td>
</tr>
<tr>
<td><code class="prettyprint">option</code> <span class="type">string</span></td>
<td>The payment option used. Can be one of: prepaid, payment_gateway, cash, paytm, simpl, aggregator. simpl — it’s an option used by customers for performing deferred payments. aggregator - this is used when payment option is handled by aggregator platform(like swiggy)</td>
</tr>
</tbody></table>

<h4 id="order-item-attributes">Order Item Attributes</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">items</code> <span class="type">array[object]</span></td>
<td>List of items making up the order.</td>
</tr>
<tr>
<td><code class="prettyprint">id</code> <span class="type">integer</span></td>
<td>The item’s ID as per the UrbanPiper system.</td>
</tr>
<tr>
<td><code class="prettyprint">title</code> <span class="type">string</span></td>
<td>Item title.</td>
</tr>
<tr>
<td><code class="prettyprint">food_type</code> <span class="type">string</span></td>
<td>Type of food. Can be empty.</td>
</tr>
<tr>
<td><code class="prettyprint">merchant_id</code> <span class="type">string</span></td>
<td>The item ID configured in the backend system (PoS/ERP).</td>
</tr>
<tr>
<td><code class="prettyprint">unit_weight</code> <span class="type">integer</span></td>
<td>The weight of 1 unit of the item. The total weight purchased would be unit_weight x quantity</td>
</tr>
<tr>
<td><code class="prettyprint">price</code> <span class="type">float</span></td>
<td>Item base unit price, excluding taxes and option prices. NOTE: If an item’s price is completely dependent on the options selected, it may so happen that the value for <code class="prettyprint">price</code> will be 0.</td>
</tr>
<tr>
<td><code class="prettyprint">quantity</code> <span class="type">integer</span></td>
<td>Number of items purchased.</td>
</tr>
<tr>
<td><code class="prettyprint">total</code> <span class="type">float</span></td>
<td>Item total price, inclusive of taxes, option prices and quantity.</td>
</tr>
<tr>
<td><code class="prettyprint">charges</code> <span class="type">array[object]</span></td>
<td>Array of item level charges applied. Examples of charges can be — shipping, charity, etc. Each charge object will have the same set of attributes as the taxes object (explained later).</td>
</tr>
<tr>
<td><code class="prettyprint">taxes</code> <span class="type">array[object]</span></td>
<td>Array of taxes applied on this item.</td>
</tr>
<tr>
<td><code class="prettyprint">rate</code> <span class="type">float</span></td>
<td>The tax percentage applied.</td>
</tr>
<tr>
<td><code class="prettyprint">value</code><span class="type">float</span></td>
<td>Computed tax amount.</td>
</tr>
<tr>
<td><code class="prettyprint">title</code> <span class="type">string</span></td>
<td>Tax component title.</td>
</tr>
<tr>
<td><code class="prettyprint">options_to_add</code> <span class="type">array[object]</span></td>
<td>A list of options that need to be added to the default item recipe. For example, on a ‘Pepperoni pizza’, the options to add may be – medium thin crust, mushroom toppings, jalapeno, etc.</td>
</tr>
<tr>
<td><code class="prettyprint">options_to_remove</code> <span class="type">array[object]</span></td>
<td>A list of item options that need to be removed from the default item recipe. For example, a customer might want onions to be removed. Option object structure will be the same as options to add object structure (explained later).</td>
</tr>
<tr>
<td><code class="prettyprint">id</code> <span class="type">integer</span></td>
<td>ID of the item option in the UrbanPiper system.</td>
</tr>
<tr>
<td><code class="prettyprint">title</code> <span class="type">string</span></td>
<td>Title of the item option.</td>
</tr>
<tr>
<td><code class="prettyprint">price</code> <span class="type">float</span></td>
<td>Unit price of the option. NOTE: Taxes are always computed at the item level and not on the option level.</td>
</tr>
<tr>
<td><code class="prettyprint">merchant_id</code> <span class="type">string</span></td>
<td>ID of the item option in the merchant’s backend system (PoS/ERP)</td>
</tr>
</tbody></table>

<h4 id="store-attributes">Store Attributes</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">store</code> <span class="type">object</span></td>
<td>The detail of the stores to which this order is linked.</td>
</tr>
<tr>
<td><code class="prettyprint">id</code> <span class="type">integer</span></td>
<td>The ID of the store in the UrbanPiper system.</td>
</tr>
<tr>
<td><code class="prettyprint">name</code> <span class="type">string</span></td>
<td>Name of the store.</td>
</tr>
<tr>
<td><code class="prettyprint">longitude</code> <span class="type">double</span></td>
<td>The geo-location longitude value.</td>
</tr>
<tr>
<td><code class="prettyprint">latitude</code> <span class="type">double</span></td>
<td>The geo-location latitude value.</td>
</tr>
<tr>
<td><code class="prettyprint">merchant_ref_id</code> <span class="type">string</span></td>
<td>The ID of the store in the merchant’s system (PoS/ERP)</td>
</tr>
<tr>
<td><code class="prettyprint">address</code> <span class="type">string</span></td>
<td>The address of the store configured in the UrbanPiper system.</td>
</tr>
</tbody></table>

<div name="order-status-change" data-unique="order-status-change"></div><h2 id="order-status-change">Order Status Change</h2>

<p>External systems can be configured such that when an order state change is received on the UrbanPiper platform, a real-time event will trigger a webhook, which in-turn will make a POST request to the external system.</p>

<p>The request data will be sent in the body of the request and the format will be JSON. Below is a sample of the JSON data and a detailed explanation of the attributes (explained further below)</p>

<p>NOTE: It is expected that the API endpoint to which this webhook makes a request returns a status code in the 2xx series. Otherwise, the platform will mark the delivery as failed and retry later (based on the configured retrial scheme)</p>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"additional_info"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"external_channel"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Swiggy"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"order_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"1189391362"</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="s2">"new_state"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Confirmed"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"order_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">1005226</span><span class="p">,</span><span class="w">
    </span><span class="s2">"prev_state"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Placed"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"timestamp"</span><span class="p">:</span><span class="w"> </span><span class="s2">"30/05/2018 10:32:34"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"store_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"STR1"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"timestamp_unix"</span><span class="p">:</span><span class="w"> </span><span class="mi">1542889106611</span><span class="p">,</span><span class="w">
    </span><span class="s2">"message"</span><span class="p">:</span><span class="w"> </span><span class="s2">""</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<h4 id="attributes">Attributes</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">additional_info</code> <span class="type">object</span></td>
<td>additional information about the order</td>
</tr>
<tr>
<td><code class="prettyprint">external_channel</code> <span class="type">object</span></td>
<td>external channel information</td>
</tr>
<tr>
<td><code class="prettyprint">name</code> <span class="type">string</span></td>
<td>name of the channel</td>
</tr>
<tr>
<td><code class="prettyprint">order_id</code> <span class="type">string</span></td>
<td>order id as per the channel</td>
</tr>
<tr>
<td><code class="prettyprint">new_state</code> <span class="type">string</span></td>
<td>new state to which the order got changed to</td>
</tr>
<tr>
<td><code class="prettyprint">order_id</code> <span class="type">string</span></td>
<td>order identifier</td>
</tr>
<tr>
<td><code class="prettyprint">prev_state</code> <span class="type">string</span></td>
<td>previous state from which the order got changed</td>
</tr>
<tr>
<td><code class="prettyprint">timestamp</code> <span class="type">string</span></td>
<td>timestamp on when state change happened</td>
</tr>
<tr>
<td><code class="prettyprint">timestamp_unix</code> <span class="type">integer</span></td>
<td>timestamp on when state change happened in unix</td>
</tr>
<tr>
<td><code class="prettyprint">message</code> <span class="type">string</span></td>
<td>message as given while state change</td>
</tr>
<tr>
<td><code class="prettyprint">store_id</code> <span class="type">string</span></td>
<td>store id of which the order belong to</td>
</tr>
</tbody></table>

<div name="rider-status-change" data-unique="rider-status-change"></div><h2 id="rider-status-change">Rider Status Change</h2>

<p>External systems can be configured such that when an rider state change is received on the UrbanPiper platform, a real-time event will trigger a webhook, which in-turn will make a POST request to the external system.</p>

<p>The request data will be sent in the body of the request and the format will be JSON. Below is a sample of the JSON data and a detailed explanation of the attributes (explained further below)</p>

<p>NOTE: It is expected that the API endpoint to which this webhook makes a request returns a status code in the 2xx series. Otherwise, the platform will mark the delivery as failed and retry later (based on the configured retrial scheme)</p>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"additional_info"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"external_channel"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Zomato"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"order_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"33243133"</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="s2">"delivery_info"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
        </span><span class="s2">"current_state"</span><span class="p">:</span><span class="w"> </span><span class="s2">"At store"</span><span class="p">,</span><span class="w">
        </span><span class="s2">"delivery_person_details"</span><span class="p">:</span><span class="w"> </span><span class="p">{</span><span class="w">
            </span><span class="s2">"alt_phone"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
            </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"test user"</span><span class="p">,</span><span class="w">
            </span><span class="s2">"phone"</span><span class="p">:</span><span class="w"> </span><span class="s2">"9999999999"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="s2">"status_updates"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="s2">"comments"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
                </span><span class="s2">"created"</span><span class="p">:</span><span class="w"> </span><span class="mi">1537209732000</span><span class="p">,</span><span class="w">
                </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"assigned"</span><span class="w">
            </span><span class="p">},</span><span class="w">
            </span><span class="p">{</span><span class="w">
                </span><span class="s2">"comments"</span><span class="p">:</span><span class="w"> </span><span class="kc">null</span><span class="p">,</span><span class="w">
                </span><span class="s2">"created"</span><span class="p">:</span><span class="w"> </span><span class="mi">1537209769000</span><span class="p">,</span><span class="w">
                </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="s2">"at-store"</span><span class="w">
            </span><span class="p">}</span><span class="w">
        </span><span class="p">]</span><span class="w">
    </span><span class="p">},</span><span class="w">
    </span><span class="s2">"order_id"</span><span class="p">:</span><span class="w"> </span><span class="mi">4318</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<h4 id="attributes">Attributes</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">order_id</code> <span class="type">integer</span></td>
<td>The Order ID as per the UrbanPiper system</td>
</tr>
<tr>
<td><code class="prettyprint">additional_info</code> <span class="type">object</span></td>
<td>additional information about the order</td>
</tr>
<tr>
<td><code class="prettyprint">external_channel</code> <span class="type">object</span></td>
<td>external channel information</td>
</tr>
<tr>
<td><code class="prettyprint">name</code> <span class="type">string</span></td>
<td>name of the channel</td>
</tr>
<tr>
<td><code class="prettyprint">order_id</code> <span class="type">string</span></td>
<td>order id as per the channel</td>
</tr>
<tr>
<td><code class="prettyprint">delivery_info</code> <span class="type">string</span></td>
<td>information about the order delivery</td>
</tr>
<tr>
<td><code class="prettyprint">current_state</code> <span class="type">string</span></td>
<td>Current status on the order delivery</td>
</tr>
<tr>
<td><code class="prettyprint">delivery_person_details</code> <span class="type">object</span></td>
<td>name and phone of the delivery person</td>
</tr>
<tr>
<td><code class="prettyprint">name</code> <span class="type">string</span></td>
<td>name of the delivery person</td>
</tr>
<tr>
<td><code class="prettyprint">phone</code> <span class="type">string</span></td>
<td>phone number of the delivery person</td>
</tr>
<tr>
<td><code class="prettyprint">alt_phone</code> <span class="type">string</span></td>
<td>alternate phone number of the delivery person</td>
</tr>
<tr>
<td><code class="prettyprint">status_updates</code> <span class="type">object</span></td>
<td>status log on the delivery state change</td>
</tr>
<tr>
<td><code class="prettyprint">created</code> <span class="type">integer</span></td>
<td>Unix timestamp (in millis) or the status creation time.</td>
</tr>
<tr>
<td><code class="prettyprint">status</code> <span class="type">string</span></td>
<td>Status of delivery</td>
</tr>
<tr>
<td><code class="prettyprint">comments</code> <span class="type">string</span></td>
<td>comments if any</td>
</tr>
</tbody></table>

<h4 id="possible-states">Possible States</h4>

<table><thead>
<tr>
<th>Value</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">unassigned</code></td>
<td>if the delivery is currently unassigned</td>
</tr>
<tr>
<td><code class="prettyprint">assigned</code></td>
<td>when delivery person got assigned</td>
</tr>
<tr>
<td><code class="prettyprint">re-assigned</code></td>
<td>when delivery person is reassigned</td>
</tr>
<tr>
<td><code class="prettyprint">at-store</code></td>
<td>when delivery person reaches store</td>
</tr>
<tr>
<td><code class="prettyprint">out-for-delivery</code></td>
<td>when delivery person is out for delivery</td>
</tr>
<tr>
<td><code class="prettyprint">delivered</code></td>
<td>when its delivered</td>
</tr>
</tbody></table>

<div name="store-actions-callback" data-unique="store-actions-callback"></div><h2 id="store-actions-callback">Store Actions Callback</h2>

<p>External systems can be configured such that when an store action is received on the UrbanPiper platform, a real-time event will trigger a webhook, which in-turn will make a POST request to the external system.</p>

<p>NOTE: It is expected that the API endpoint to which this webhook makes a request returns a status code in the 2xx series. Otherwise, the platform will mark the delivery as failed and retry later (based on the configured retrial scheme)</p>
<pre class="highlight json tab-json"><code><span class="p">{</span><span class="w">
    </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"enable"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"location_ref_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"105"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"platform"</span><span class="p">:</span><span class="w"> </span><span class="s2">"zomato"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="kc">true</span><span class="w">
</span><span class="p">}</span><span class="w">


</span><span class="p">{</span><span class="w">
    </span><span class="s2">"action"</span><span class="p">:</span><span class="w"> </span><span class="s2">"verify"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"location_ref_id"</span><span class="p">:</span><span class="w"> </span><span class="s2">"105"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"platform"</span><span class="p">:</span><span class="w"> </span><span class="s2">"zomato"</span><span class="p">,</span><span class="w">
    </span><span class="s2">"result"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="s2">"entities"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                </span><span class="p">{</span><span class="w">
                    </span><span class="s2">"message"</span><span class="p">:</span><span class="w"> </span><span class="p">[</span><span class="w">
                        </span><span class="s2">"Item price cannot be greater than 5000"</span><span class="w">
                    </span><span class="p">],</span><span class="w">
                    </span><span class="s2">"name"</span><span class="p">:</span><span class="w"> </span><span class="s2">"Biriyani for 5"</span><span class="p">,</span><span class="w">
                    </span><span class="s2">"type"</span><span class="p">:</span><span class="w"> </span><span class="s2">"item"</span><span class="w">
                </span><span class="p">}</span><span class="w">
            </span><span class="p">],</span><span class="w">
            </span><span class="s2">"level"</span><span class="p">:</span><span class="w"> </span><span class="s2">"error"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="s2">"entities"</span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
            </span><span class="s2">"level"</span><span class="p">:</span><span class="w"> </span><span class="s2">"warning"</span><span class="w">
        </span><span class="p">},</span><span class="w">
        </span><span class="p">{</span><span class="w">
            </span><span class="s2">"entities"</span><span class="p">:</span><span class="w"> </span><span class="p">[],</span><span class="w">
            </span><span class="s2">"level"</span><span class="p">:</span><span class="w"> </span><span class="s2">"info"</span><span class="w">
        </span><span class="p">}</span><span class="w">
    </span><span class="p">],</span><span class="w">
    </span><span class="s2">"status"</span><span class="p">:</span><span class="w"> </span><span class="kc">false</span><span class="w">
</span><span class="p">}</span><span class="w">
</span></code></pre>
<h4 id="attributes">Attributes</h4>

<table><thead>
<tr>
<th>Parameter</th>
<th>Description</th>
</tr>
</thead><tbody>
<tr>
<td><code class="prettyprint">action</code> <span class="type">string</span></td>
<td>action which got performed</td>
</tr>
<tr>
<td><code class="prettyprint">location_ref_id</code> <span class="type">string</span></td>
<td>location reference</td>
</tr>
<tr>
<td><code class="prettyprint">platform</code> <span class="type">string</span></td>
<td>name of the platform</td>
</tr>
<tr>
<td><code class="prettyprint">status</code> <span class="type">Boolean</span></td>
<td>status of the action which got performed</td>
</tr>
<tr>
<td><code class="prettyprint">result</code> <span class="type">Array[Object]</span></td>
<td>result of the action(currently supported for <em>verify</em> action)</td>
</tr>
<tr>
<td><code class="prettyprint">level</code> <span class="type">String</span></td>
<td>level indicates whether it is error, warning or info</td>
</tr>
<tr>
<td><code class="prettyprint">entities</code> <span class="type">Array[Object]</span></td>
<td>details on each entity</td>
</tr>
<tr>
<td><code class="prettyprint">name</code> <span class="type">String</span></td>
<td>name of the entity</td>
</tr>
<tr>
<td><code class="prettyprint">type</code> <span class="type">String</span></td>
<td>type of the entity like item, category etc</td>
</tr>
<tr>
<td><code class="prettyprint">message</code> <span class="type">Array[String]</span></td>
<td>array of message on the particular entity</td>
</tr>
</tbody></table>

          <div name="developer-changelog" data-unique="developer-changelog"></div><h1 id="developer-changelog">Developer changelog</h1>

<p>Stay up to date with the recent changes to UrbanPiper’s APIs.</p>

<div name="semantic-versioning-approach" data-unique="semantic-versioning-approach"></div><h2 id="semantic-versioning-approach">Semantic Versioning Approach</h2>

<p><strong>Major</strong> <code class="prettyprint">(X.x.x)</code> - Any New APIs introduced in the ordering integration.<br>
<strong>Minor</strong> <code class="prettyprint">(x.X.x)</code> - New functionality added in the APIs with backward compatibility and existing APIs deprecated with/without backward compatibility.<br>
<strong>Patch</strong> <code class="prettyprint">(x.x.X)</code> - New fields, attributes, objects/arrays added or removed in the APIs. Important information related to APIs added.</p>

<hr>

<h3 id="v-5-3-0-09th-april-2019">v.5.3.0 - 09th April, 2019</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Added</td>
<td><strong>Constraints and Expectations</strong> - Throttle limit, Payload size, Expected response time added for below APIs.<br>- <a href="https://api-ordering-docs.urbanpiper.com/#adding-updating-stores">Adding/Updating stores</a><br>- <a href="https://api-ordering-docs.urbanpiper.com/#toggle-store-for-platform">Toggle Store for Platform</a><br>- <a href="https://api-ordering-docs.urbanpiper.com/#managing-catalogue">Managing catalogue</a><br>- <a href="https://api-ordering-docs.urbanpiper.com/#toggle-items-for-platform">Toggle Items for Platform</a></td>
</tr>
</tbody></table>

<h3 id="v-5-2-0-24th-february-2019">v.5.2.0 - 24th February, 2019</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Removed</td>
<td><strong>Order Polling</strong> - Removed order polling mechanism from the API document. We have stopped giving the support for order polling integration approach.</td>
</tr>
</tbody></table>

<h3 id="v-5-1-2-17th-february-2019">v.5.1.2 - 17th February, 2019</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Added</td>
<td><strong>i18n transalations</strong> - We have introduced an array of translation objects for <a href="https://api-ordering-docs.urbanpiper.com/#managing-catalogue">Manage Catalogue</a> and <a href="https://api-ordering-docs.urbanpiper.com/#adding-updating-stores">Adding/Updating Stores</a> APIs - each object specifies a translated value for the <code class="prettyprint">name</code> attribute.<br>The 2-letter (ISO-639-1 compliant) language code. At present, the following languages are supported:<br>– <code class="prettyprint">hi</code>: Hindi<br>– <code class="prettyprint">ar</code>: Arabic<br>– <code class="prettyprint">ja</code>: Japanese<br>– <code class="prettyprint">pt</code>: Portugues<br>– <code class="prettyprint">fr</code>: French<br>– <code class="prettyprint">es</code>: Spanish<br></td>
</tr>
</tbody></table>

<h3 id="v-5-1-1-05th-february-2019">v.5.1.1 - 05th February, 2019</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Added</td>
<td><strong>‘Event Type’ header for webhooks</strong> - The outbound request associated with every webhook has a header value <code class="prettyprint">X-UPR-Event-Type</code> that can be  used to identify the associated <em>event type</em>. The value for this header is set to a unique value that identifies the <em>event</em>. <a href="https://api-ordering-docs.urbanpiper.com/##webhooks"><em>more-info</em></a></td>
</tr>
</tbody></table>

<h3 id="v-5-1-0-10th-january-2019">v.5.1.0 - 10th January, 2019</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Added</td>
<td><strong>Adding/Updating Stores API</strong> - We have introduced a new API to create/update the stores/outlets for a brand in UrbanPiper Quint Dashboard. <a href="https://api-ordering-docs.urbanpiper.com/#adding-updating-stores">more info…</a></td>
</tr>
<tr>
<td>Updated</td>
<td><strong>Managing Catalogue API</strong> - <br>- We have introduced <em>category</em>, <em>option-group</em> array in the existing Manage Catalogue payload.<br>- New attribute “Category_ref_ids” has been introduced in item array.<br>- New attributes “opt_grp_ref_ids” and “nested_opt_grps” has been introduced in option’s array.<br>- Now, menu can be created and associated starting with category-items-optiongroups-options through this API. <a href="https://api-ordering-docs.urbanpiper.com/#managing-catalogue">more info…</a></td>
</tr>
<tr>
<td>Added</td>
<td><strong>Callback URL for APIs</strong> -  Once the platform has processed all the information related to <a href="https://api-ordering-docs.urbanpiper.com/#adding-updating-stores">Adding/Updating Stores</a> and <a href="https://api-ordering-docs.urbanpiper.com/#managing-catalogue">Managing Catalogue</a>, a callback request is made using webhooks for Stores and Catalogue respectively. <a href="https://api-ordering-docs.urbanpiper.com/#store-configuration-callback">more info…</a></td>
</tr>
</tbody></table>

<h3 id="v-4-1-1-06th-december-2018">v.4.1.1 - 06th December, 2018</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Added</td>
<td><strong>Extras</strong> - We have now included <code class="prettyprint">extras</code> in case of aggregator order, which will hold aggregator specific information like whether order is swiggy 30 minutes delivery order or not, pop order or regular order. Cash to be collected from rider incase of COD orders for zomato etc<br><strong>Code</strong> - We have started populating <code class="prettyprint">code</code> in external channel discount data. This is available for zomato orders now. <a href="https://api-ordering-docs.urbanpiper.com/#order-relay">more info…</a></td>
</tr>
</tbody></table>

<h3 id="v-4-1-0-21th-november-2018">v.4.1.0 - 21th November, 2018</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Removed</td>
<td><strong>Mark Food Ready API</strong> - We have deprecated the <em>Mark Food Ready API</em> and moved it’s functionality to <a href="https://api-ordering-docs.urbanpiper.com/#order-status-update">Order Status Update API</a> by adding a new status called <code class="prettyprint">Food Ready</code>.</td>
</tr>
<tr>
<td>Added</td>
<td><strong>Food Ready</strong> - Added a new status called <code class="prettyprint">Food Ready</code> to perform the same functionality as <em>Mark Food Ready</em> API.</td>
</tr>
</tbody></table>

<h3 id="v-4-0-0-19th-september-2018">v.4.0.0 - 19th September, 2018</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Added</td>
<td><strong>Rider Status Update Webhook</strong> - The deliver rider status information for the order will be availble in webhooks. <a href="https://api-ordering-docs.urbanpiper.com/#rider-status-change">more info…</a></td>
</tr>
</tbody></table>

<h3 id="v-3-0-0-7th-august-2018">v.3.0.0 - 7th August, 2018</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Added</td>
<td><strong>Mark Food Ready API</strong> - New API introduced to mark the food as ready for Swiggy orders as soon as it’s prepared.</td>
</tr>
</tbody></table>

<h3 id="v-2-0-1-31th-july-2018">v.2.0.1 - 31th July, 2018</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Added</td>
<td><strong>Discount &amp; Delivery Type Information</strong> - Detailed discount information and delivery type information of the orders(whether <em>partner</em> or <em>self-delivery</em> should deliver the orders) is now available in the order relay payload under <code class="prettyprint">ext_platforms</code> array. <a href="https://api-ordering-docs.urbanpiper.com/#order-relay">more info…</a></td>
</tr>
</tbody></table>

<h3 id="v-2-0-0-03th-july-2018">v.2.0.0 - 03th July, 2018</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Added</td>
<td><strong>Toggle Stores for Platforms</strong> - Enable/disable the stores on aggregator’s platfrom using this API. <a href="https://api-ordering-docs.urbanpiper.com/#toggle-store-for-platform">more info…</a></td>
</tr>
</tbody></table>

<h3 id="v-1-0-0-25th-june-2018">v.1.0.0 - 25th June, 2018</h3>

<table><thead>
<tr>
<th>Action</th>
<th>Changelog</th>
</tr>
</thead><tbody>
<tr>
<td>Added</td>
<td><strong>Order Relay Webhook</strong> - An order is received on the UrbanPiper platform, a real-time event will trigger a webhook, which in-turn will make a POST request to the external system. <a href="https://api-ordering-docs.urbanpiper.com/#order-relay">more info…</a><br><strong>Order Status Change Webhook</strong> - An order state change is received on the UrbanPiper platform, a real-time event will trigger a webhook, which in-turn will make a POST request to the external system. <a href="https://api-ordering-docs.urbanpiper.com/#order-status-change">more info…</a><br><strong>Order Status Update API</strong> - An API processes a status update for an order which has been <em>placed</em> before in POS system. <a href="https://api-ordering-docs.urbanpiper.com/#order-status-update">more info…</a><br><strong>Toggle Items for Platform</strong> - An API for performing the stock-in/stock-out the items across different online ordering platforms. <a href="https://api-ordering-docs.urbanpiper.com/#toggle-items-for-platform">more info…</a></td>
</tr>
</tbody></table>

          <div name="errors" data-unique="errors"></div><h1 id="errors">Errors</h1>

<p>A list of possible error codes that might be returned by the system.</p>

<table><thead>
<tr>
<th>Error Code</th>
<th>Meaning</th>
</tr>
</thead><tbody>
<tr>
<td>400</td>
<td>Bad Request – there was something wrong with the request data.</td>
</tr>
<tr>
<td>401</td>
<td>Unauthorized – the API key or user credentials is wrong.</td>
</tr>
<tr>
<td>403</td>
<td>Forbidden – not allowed to make this request.</td>
</tr>
<tr>
<td>404</td>
<td>Not Found – check the URL path.</td>
</tr>
<tr>
<td>405</td>
<td>Method Not Allowed – you tried accessing an endpoint with an unsupported method.</td>
</tr>
<tr>
<td>429</td>
<td>Too Many Requests – You’re making too many requests and breached the throttle limit.</td>
</tr>
<tr>
<td>500</td>
<td>Internal Server Error – We had a problem with our server. Try again later or <a href="mailto:support@urbanpiper.com">let us know</a>.</td>
</tr>
<tr>
<td>503</td>
<td>Service Unavailable – We’re temporarily offline for maintenance. Please try again later.</td>
</tr>
</tbody></table>

      </div>
      <div class="dark-box">
          <div class="lang-selector">
                <a href="https://api-ordering-docs.urbanpiper.com/#" data-language-name="shell" class="active">shell</a>
                <a href="https://api-ordering-docs.urbanpiper.com/#" data-language-name="python">python</a>
                <a href="https://api-ordering-docs.urbanpiper.com/#" data-language-name="javascript">javascript</a>
                <a href="https://api-ordering-docs.urbanpiper.com/#" data-language-name="java">java</a>
                <a href="https://api-ordering-docs.urbanpiper.com/#" data-language-name="php">php</a>
          </div>
      </div>
    </div>
  

</body><loom-container id="lo-engage-ext-container"><loom-shadow classname="resolved"></loom-shadow></loom-container></html>